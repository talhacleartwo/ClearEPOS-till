[{"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\index.js":"1","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\App.js":"2","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\reportWebVitals.js":"3","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\storage.js":"4","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\contexts\\OrderContext.js":"5","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\contexts\\UserContext.js":"6","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\Setup.js":"7","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\Till.js":"8","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\AuthLayer.js":"9","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\queries.js":"10","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\SignOn.js":"11","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\clientHandler.js":"12","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\ManageOrdersPanel.js":"13","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\OrderEditor.js":"14","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\CreateOrderPanel.js":"15","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DisplayUtility.js":"16","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DateTimeClock.js":"17","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\Tabs.js":"18","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomerSearchResults.js":"19","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\StaffSearchResults.js":"20","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\CompleteOrdersTab.js":"21","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\InHouseOrdersTab.js":"22","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\ProcessingOrdersTab.js":"23","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\CategorySelector.js":"24","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\ProductEditor.js":"25","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\ProductSelector.js":"26","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\GroupProductSelector.js":"27","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\NewOrdersTab.js":"28","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderReceipt.js":"29","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\OrderSettings.js":"30","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\payorder\\Payment.js":"31","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\OrderListItem.js":"32","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\CurrentOrderHeader.js":"33","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderItems.js":"34","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\printer.js":"35","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderActions.js":"36","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\OptionsTab.js":"37","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\itemEditUtils.js":"38","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\ExtrasTab.js":"39","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\AllergensTab.js":"40","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\tabs\\NotesTab.js":"41","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\tabs\\GeneralTab.js":"42","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DateTimeUtils.js":"43","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomerForm.js":"44","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\AddressForm.js":"45","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomersResults.js":"46","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\AddressesResults.js":"47"},{"size":812,"mtime":1626257530406,"results":"48","hashOfConfig":"49"},{"size":2529,"mtime":1626257530291,"results":"50","hashOfConfig":"49"},{"size":375,"mtime":1626257530406,"results":"51","hashOfConfig":"49"},{"size":3407,"mtime":1627909989148,"results":"52","hashOfConfig":"49"},{"size":1025,"mtime":1626257530391,"results":"53","hashOfConfig":"49"},{"size":883,"mtime":1626257530391,"results":"54","hashOfConfig":"49"},{"size":8647,"mtime":1626257530391,"results":"55","hashOfConfig":"49"},{"size":3236,"mtime":1627911914179,"results":"56","hashOfConfig":"49"},{"size":614,"mtime":1626257530375,"results":"57","hashOfConfig":"49"},{"size":6379,"mtime":1627902452166,"results":"58","hashOfConfig":"49"},{"size":6344,"mtime":1627911886878,"results":"59","hashOfConfig":"49"},{"size":1329,"mtime":1626257530406,"results":"60","hashOfConfig":"49"},{"size":2786,"mtime":1626257530322,"results":"61","hashOfConfig":"49"},{"size":10923,"mtime":1627403667507,"results":"62","hashOfConfig":"49"},{"size":23523,"mtime":1627896071947,"results":"63","hashOfConfig":"49"},{"size":2477,"mtime":1626257530375,"results":"64","hashOfConfig":"49"},{"size":718,"mtime":1626257530375,"results":"65","hashOfConfig":"49"},{"size":1135,"mtime":1626257530306,"results":"66","hashOfConfig":"49"},{"size":4858,"mtime":1627891125518,"results":"67","hashOfConfig":"49"},{"size":1127,"mtime":1626257530306,"results":"68","hashOfConfig":"49"},{"size":1548,"mtime":1626257530322,"results":"69","hashOfConfig":"49"},{"size":1372,"mtime":1626257530322,"results":"70","hashOfConfig":"49"},{"size":813,"mtime":1626425663734,"results":"71","hashOfConfig":"49"},{"size":1315,"mtime":1626257530337,"results":"72","hashOfConfig":"49"},{"size":8503,"mtime":1626685852784,"results":"73","hashOfConfig":"49"},{"size":2096,"mtime":1626257530344,"results":"74","hashOfConfig":"49"},{"size":1520,"mtime":1626257530344,"results":"75","hashOfConfig":"49"},{"size":2478,"mtime":1626257530322,"results":"76","hashOfConfig":"49"},{"size":999,"mtime":1626257530360,"results":"77","hashOfConfig":"49"},{"size":1607,"mtime":1626791712731,"results":"78","hashOfConfig":"49"},{"size":19327,"mtime":1626691383329,"results":"79","hashOfConfig":"49"},{"size":1521,"mtime":1626257530375,"results":"80","hashOfConfig":"49"},{"size":1506,"mtime":1626257530375,"results":"81","hashOfConfig":"49"},{"size":2910,"mtime":1626257530360,"results":"82","hashOfConfig":"49"},{"size":5738,"mtime":1626426791932,"results":"83","hashOfConfig":"49"},{"size":1841,"mtime":1626257804995,"results":"84","hashOfConfig":"49"},{"size":4983,"mtime":1626257530344,"results":"85","hashOfConfig":"49"},{"size":532,"mtime":1626257530406,"results":"86","hashOfConfig":"49"},{"size":3053,"mtime":1626257530344,"results":"87","hashOfConfig":"49"},{"size":3700,"mtime":1626257530344,"results":"88","hashOfConfig":"49"},{"size":867,"mtime":1626791743366,"results":"89","hashOfConfig":"49"},{"size":1460,"mtime":1626257530360,"results":"90","hashOfConfig":"49"},{"size":142,"mtime":1626257530375,"results":"91","hashOfConfig":"49"},{"size":1301,"mtime":1627659339104,"results":"92","hashOfConfig":"49"},{"size":1462,"mtime":1627659357855,"results":"93","hashOfConfig":"49"},{"size":1453,"mtime":1627658725156,"results":"94","hashOfConfig":"49"},{"size":1721,"mtime":1627658725141,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"ln7vuf",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"164","usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\index.js",[],["197","198"],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\App.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\reportWebVitals.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\storage.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\contexts\\OrderContext.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\contexts\\UserContext.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\Setup.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\Till.js",["199"],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\AuthLayer.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\queries.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\SignOn.js",["200","201","202"],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\clientHandler.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\ManageOrdersPanel.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\OrderEditor.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\CreateOrderPanel.js",["203","204","205","206","207","208","209","210"],"import {useState} from 'react';\r\n\r\nimport {gql, useMutation} from '@apollo/client';\r\n\r\nimport CustomerSearchResults from '../controls/CustomerSearchResults';\r\n\r\n//Contexts\r\nimport {useSetCurrentOrder} from '../../../contexts/OrderContext';\r\nimport StaffSearchResults from '../controls/StaffSearchResults';\r\n\r\nimport CustomerForm from '../controls/CustomerForm';\r\nimport AddressForm from '../controls/AddressForm';\r\n\r\nconst BLANK_ORDER = {\r\n    type: null,\r\n    source: 'direct',\r\n    staff_member: null,\r\n    customer : null,\r\n    address: null\r\n};\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CreateOrder(\r\n        $type: ENUM_ORDER_TYPE!\r\n        $source: ENUM_ORDER_SOURCE!\r\n        $staff_member: ID,\r\n        $customer: ID,\r\n        $address: ID\r\n    ) {\r\n        createOrder(\r\n            input: {\r\n                data: {\r\n                    type: $type\r\n                    source: $source\r\n                    staff_member: $staff_member\r\n                    customer: $customer\r\n                    address: $address\r\n                }\r\n            }\r\n        )\r\n        {\r\n            order {\r\n                id\r\n                type\r\n                source\r\n                staff_member\r\n                {\r\n                    id,\r\n                    firstname,\r\n                    lastname\r\n                }\r\n                customer {\r\n                    id\r\n                    firstname\r\n                    lastname\r\n                    mobilephone\r\n                }\r\n                address {\r\n                    id\r\n                    name\r\n                    postalcode\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst CREATE_CUSTOMER_MUTATION = gql`\r\n    mutation CreateCustomer(\r\n        $email : String!,\r\n        $firstname : String!,\r\n        $lastname : String!,\r\n        $mobilephone : String!,\r\n        $birthdate: Date!\r\n    ) {\r\n        createCustomer(\r\n            input: {\r\n                data: {\r\n                    emailaddress1: $email,\r\n                    firstname: $firstname,\r\n                    lastname: $lastname,\r\n                    mobilephone: $mobilephone,\r\n                    birthdate: $birthdate\r\n                }\r\n            }\r\n        )\r\n        {\r\n            customer {\r\n                id\r\n                firstname\r\n                lastname\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst CREATE_ADDRESS_MUTATION = gql`\r\n    mutation CreateAddress(\r\n        $name : String!,\r\n        $line1 : String!,\r\n        $line2 : String!,\r\n        $postalcode : String!,\r\n        $city: String!,\r\n        $country: String!,\r\n        $customer_id : ID!\r\n    ) {\r\n        createAddress(\r\n            input: {\r\n            data: {\r\n                name: $name,\r\n                line1: $line1,\r\n                line2: $line2,\r\n                city: $city,\r\n                postalcode: $postalcode,\r\n                county: $country,\r\n                customer: $customer_id\r\n            }\r\n        }\r\n    )\r\n        {\r\n            address\r\n            {\r\n                id             \r\n                line1\r\n                line2\r\n                postalcode\r\n                customer{\r\n                    id,\r\n                    firstname,\r\n                    lastname,\r\n                    mobilephone,\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst UPDATE_CUSTOMER_MUTATION = gql`\r\n\r\n    mutation updatecustomer(\r\n        $id: ID!,\r\n        $fname : String!,\r\n        $lname : String!,\r\n        $phone : String!\r\n    )\r\n    {\r\n        updateCustomer(input:{where:{id:$id},data:{\r\n            firstname : $fname,\r\n            lastname : $lname,\r\n            mobilephone : $phone\r\n        }})\r\n        {\r\n            customer{id}\r\n        }\r\n    }\r\n\r\n`;\r\nconst UPDATE_ADDRESS_MUTATION = gql`\r\n\r\n    mutation updateaddress(\r\n        $id: ID!,\r\n        $name : String!,\r\n        $line1 : String!,\r\n        $line2 : String!\r\n        $postalcode: String!,\r\n        $city : String!,\r\n        $country : String!\r\n    )\r\n    {\r\n        updateAddress(input:{where:{id:$id},data:{\r\n            name : $name,\r\n            line1 : $line1,\r\n            line2 : $line2,\r\n            postalcode : $postalcode,\r\n            city : $city,\r\n            county : $country\r\n        }})\r\n        {\r\n            address{id}\r\n        }\r\n    }\r\n\r\n`;\r\nvar customer_id = \"\";\r\nvar changedtype = \"\";\r\nfunction CreateOrderPanel(props)\r\n{\r\n    const [newOrder,updateNewOrder] = useState(BLANK_ORDER);\r\n    const [showSection,changeShowSection] = useState('type');\r\n    const [currentCustomerSearch, setCurrentCustomerSearch] = useState('');\r\n\r\n    const [createNewOrder, { loading: mutationLoading, error: mutationError }] = useMutation(CREATE_ORDER_MUTATION, {\r\n        onCompleted(data){\r\n            openOrder(data);\r\n        }\r\n    });\r\n\r\n    const [CreateCustomer, { loading: customermutationLoading, error: CustomermutationError }] = useMutation(CREATE_CUSTOMER_MUTATION, {\r\n        onCompleted(data){\r\n            CreatedCustomerSelected(data);\r\n        }\r\n    });\r\n\r\n    const [CreateAddress, { loading: addressmutationLoading, error: addressmutationError }] = useMutation(CREATE_ADDRESS_MUTATION, {\r\n        onCompleted(data){\r\n            CreatedAddressSelected(data);\r\n        }\r\n    });\r\n    const [UpdateCustomer, { loading: updatecustomermutationLoading, error: updatecustomermutationError }] = useMutation(UPDATE_CUSTOMER_MUTATION, {\r\n        onCompleted(data){\r\n            changeShowSection('customer');\r\n        }\r\n    });\r\n    const [UpdateAddress, { loading: updateaddressmutationLoading, error: updateaddressmutationError }] = useMutation(UPDATE_ADDRESS_MUTATION, {\r\n        onCompleted(data){\r\n            changeShowSection('customer');\r\n        }\r\n    });\r\n\r\n\r\n\r\n    //Use our custom hook to enable us to set the current order after creating or opening one\r\n    var setCurrentOrder = useSetCurrentOrder();\r\n\r\n    //IF the current type is walkin or eatin, create the order now\r\n    /*useEffect(() => {\r\n        if( (newOrder.type === \"eatin\" || newOrder.type === \"walkin\") && !mutationLoading )\r\n        {\r\n            createOrder();\r\n        }\r\n    }, [newOrder.type]);*/\r\n    \r\n\r\n    \r\n\r\n    //Check if currently creating new order\r\n    if(mutationLoading)\r\n    {\r\n        return (\r\n            <div className=\"loader\">\r\n                <div className=\"spinner\"></div>\r\n                <div className=\"message\">Creating Order..</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(mutationError)\r\n    {\r\n        return (\r\n            <div className=\"Error\">Error Creating the order..</div>\r\n        );\r\n    }\r\n\r\n\r\n    \r\n\r\n    function getTypeOptionClasses(myID)\r\n    {\r\n        return \"coOption \" + myID + (myID === newOrder.type ? \" selected\" : \"\");\r\n    }\r\n\r\n    /*Events*/\r\n    function typeChanged(event)\r\n    {\r\n        var val = event.target.dataset.value;\r\n        var nOrder = newOrder;\r\n        nOrder.type = val;\r\n        updateNewOrder(nOrder);\r\n        changedtype = val;\r\n        if(val !== 'staff')\r\n        {\r\n            changeShowSection('customer');\r\n        }\r\n        else\r\n        {\r\n            changeShowSection('staff');\r\n        }\r\n    }\r\n\r\n    function searchChanged(event)\r\n    {\r\n        var val = event.target.value;\r\n        setCurrentCustomerSearch(val);\r\n    }\r\n\r\n    function CreatedAddressSelected(data){\r\n\r\n        var nOrder = newOrder;\r\n        nOrder.customer = data.createAddress.address.customer.id;\r\n        nOrder.address = data.createAddress.address.id;\r\n        nOrder.customerData = data.createAddress.address.customer;\r\n        nOrder.addressData = data.createAddress.address;\r\n        updateNewOrder(nOrder);\r\n        changeShowSection('summary');\r\n\r\n    }\r\n\r\n    function addressSelected(event)\r\n    {\r\n        var val = JSON.parse(event.target.dataset.value);\r\n        var cust = JSON.parse(event.target.dataset.customer);\r\n        console.log(cust);\r\n        var nOrder = newOrder;\r\n        nOrder.customer = cust.id;\r\n        nOrder.address = val.id;\r\n        nOrder.customerData = cust;\r\n        nOrder.addressData = val;\r\n        updateNewOrder(nOrder);\r\n        changeShowSection('summary');\r\n    }\r\n\r\n    function CreatedCustomerSelected(data){\r\n\r\n        if(changedtype === 'collection'){\r\n            var nOrder = newOrder;\r\n            nOrder.customer = data.createCustomer.customer.id;\r\n            nOrder.customerData = data.createCustomer.customer;\r\n            updateNewOrder(nOrder);\r\n            changeShowSection('summary');\r\n        } else{\r\n            changeShowSection('addressform');\r\n        }\r\n    }\r\n\r\n    function customerSelected(event)\r\n    {\r\n        var val = JSON.parse(event.target.dataset.customer);\r\n        var nOrder = newOrder;\r\n        nOrder.customer = val.id;\r\n        nOrder.customerData = val;\r\n        updateNewOrder(nOrder);\r\n        changeShowSection('summary');\r\n    }\r\n\r\n    function staffMemberSelected(event)\r\n    {\r\n        var val = JSON.parse(event.target.dataset.staffmember);\r\n        var nOrder = newOrder;\r\n        nOrder.staff_member = val.id;\r\n        nOrder.staffData = val;\r\n        updateNewOrder(nOrder);\r\n        changeShowSection('summary');\r\n    }\r\n\r\n    function updateCustomer(event , cust_id)\r\n    {\r\n        event.preventDefault();\r\n        UpdateCustomer({variables:{id:cust_id , fname : event.target.firstname.value , lname:event.target.lastname.value , phone:event.target.mobilephone.value}});\r\n    }\r\n\r\n    function updateAddress(event , address_id)\r\n    {\r\n        event.preventDefault();\r\n        UpdateAddress({variables:{id:address_id , name : event.target.name.value , line1:event.target.line1.value , line2:event.target.line2.value , postalcode: event.target.postalcode.value, city:event.target.city.value , country:event.target.county.value}});\r\n    }\r\n\r\n    function createOrder(nOrder)\r\n    {\r\n        var theOrder = {...nOrder};\r\n        delete theOrder.customerData;\r\n        delete theOrder.staffData;\r\n        delete theOrder.addressData;\r\n        console.log(\"order query check : \");\r\n        console.log(theOrder);\r\n        createNewOrder({variables:theOrder});\r\n    }\r\n\r\n    function createEatinWalkinOrder(type)\r\n    {\r\n        var no={...BLANK_ORDER}; \r\n        no.type=type;\r\n        createOrder(no);\r\n    }\r\n\r\n    function openOrder(data)\r\n    {\r\n        console.log(\"Opening Order:\");\r\n        console.log(data);\r\n        setCurrentOrder(data.createOrder.order.id)\r\n    }\r\n\r\n\r\n    /*Section Renderers*/\r\n    function renderCreatOrderNavigation()\r\n    {\r\n        return(\r\n            <>\r\n                <header className=\"withNav\">\r\n                    {showSection === 'customerform' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('customer')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'addressform' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('customer')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'customer' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('type')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'staff' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('type')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'summary' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('customer')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'editCustomer' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('summary')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'editAddress' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('summary')}><i className=\"icon-prev\"></i></div> : null}\r\n                    <h4>Create Order</h4>\r\n                    {showSection === 'type' && newOrder.type != null ? <div className=\"navbtn next\" onClick={() => changeShowSection('customer')}><i className=\"icon-next\"></i></div> : null}\r\n                    {showSection === 'customer' && newOrder.customer != null ? <div className=\"navbtn next\" onClick={() => changeShowSection('summary')}><i className=\"icon-next\"></i></div> : null}\r\n                </header>\r\n                <div className=\"clearfix\"></div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    function renderTypeSection()\r\n    {\r\n        return (\r\n            <div className=\"section delivery_type\">\r\n                {/*<h4 className=\"center\">Order Type</h4>*/}\r\n                <div className=\"coSelector\">\r\n                    <div className={getTypeOptionClasses('walkin')} data-value=\"walkin\" onClick={()=>{createEatinWalkinOrder(\"walkin\")}}>Walk In</div>\r\n                    <div className={getTypeOptionClasses('eatin')} data-value=\"eatin\" onClick={()=>{createEatinWalkinOrder(\"eatin\")}}>Eat In</div>\r\n                    <div className={getTypeOptionClasses('collection')} data-value=\"collection\" onClick={typeChanged}>Collection</div>\r\n                    <div className={getTypeOptionClasses('delivery')} data-value=\"delivery\" onClick={typeChanged}>Delivery</div>\r\n                    <div className={getTypeOptionClasses('staff')} data-value=\"staff\" onClick={typeChanged}>Staff</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function ShowCustomerForm(){\r\n        changeShowSection('customerform');\r\n    }\r\n\r\n    function CreateCustomerForm(data){\r\n\r\n        CreateCustomer({variables:{email:data.email , firstname:data.fname , lastname:data.lname , birthdate:data.date , mobilephone:data.phone}});\r\n\r\n    }\r\n\r\n    function renderCustomerSearch()\r\n    {\r\n        if(newOrder.source === 'staff') return null;\r\n\r\n        var updateFunctionToCall = newOrder.type === 'collection' ? customerSelected : addressSelected;\r\n        return (\r\n            <div className=\"customerSearch\">\r\n                <h4 className=\"center\">Customer</h4>\r\n                <div>\r\n                    <button style={{width : \"25%\"}} className=\"btn btn-success btn-sm f_right\" onClick={() => ShowCustomerForm()}>Add New</button>\r\n                    <input type=\"number\" pattern=\"\\d*\" className=\"search__customers\" style={{width : \"70%\"}} placeholder=\"Search Customers By Number\" value={currentCustomerSearch} onChange={searchChanged}/>\r\n                </div>\r\n                {\r\n                    currentCustomerSearch !== \"\" ? \r\n                        <CustomerSearchResults\r\n                            search={currentCustomerSearch}\r\n                            updateFunction={updateFunctionToCall}\r\n                            customerOnly={newOrder.type === 'collection'}\r\n                            AddressForm={ShowAddressForm}\r\n                            Tab ={changedtype}\r\n                        />\r\n                    : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function renderStaffList()\r\n    {\r\n        return(\r\n            <div className=\"staffSearch\">\r\n                <h4 className=\"center\">Staff Member</h4>\r\n                {\r\n                    <StaffSearchResults updateFunction={staffMemberSelected}/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function renderSummarySection()\r\n    {\r\n        return(\r\n            <div className=\"section summary\">\r\n                {\r\n                    newOrder.type === 'staff' ?\r\n                    (\r\n                        <div className=\"customerCard\">\r\n                            <div className=\"customerIcon\"><i className=\"icon-person\"></i></div>\r\n                            <div className=\"content\">\r\n                                <div className=\"name\">{newOrder.staffData.firstname} {newOrder.staffData.lastname}</div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    :\r\n                    (\r\n                        <div className=\"customerCard\">\r\n                            <div className=\"customerIcon\"><i className=\"icon-person\"></i></div>\r\n                            <div className=\"content\">\r\n                                <div className=\"name\">{newOrder.customerData.firstname} {newOrder.customerData.lastname}</div>\r\n                                <div className=\"sub\">{newOrder.customerData.mobilephone}</div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n                <hr className=\"fifty\"/>\r\n                {\r\n                    newOrder.addressData && newOrder.type === \"delivery\" ? \r\n                    (\r\n                        <>\r\n                            <div className=\"addressCard\">\r\n                                <div className=\"addressIcon\"><i className=\"icon-location\"></i></div>\r\n                                <div className=\"content\">\r\n                                    Delivering to {newOrder.addressData.name} address at {newOrder.addressData.postalcode}\r\n                                </div>\r\n                            </div>\r\n                            <hr/>\r\n                        </>\r\n                    )\r\n                    : \r\n                    newOrder.type === 'collection' ? \r\n                    (\r\n                        <>\r\n                        <div className=\"addressCard\">\r\n                            <div className=\"addressIcon\"><i className=\"icon-eatin\"></i></div>\r\n                                <div className=\"content\">\r\n                                    Collection from store\r\n                                </div>\r\n                            </div>\r\n                            <hr/>\r\n                        </>\r\n                    ) \r\n                    : \r\n                    null\r\n                }\r\n                <div className=\"buttonBar\">\r\n                    {\r\n                        newOrder.type !== \"staff\" ? \r\n                        (\r\n                            <div className=\"btn btn-info\" onClick={() => {changeShowSection('editCustomer');} }>Edit Customer</div>\r\n                        )\r\n                        :\r\n                        null\r\n                    }\r\n                    {newOrder.addressData ? <div className=\"btn btn-info\" onClick={() => {changeShowSection('editAddress');} }>Edit Address</div> : null}\r\n                    <div className=\"btn btn-success\" onClick={()=>{createOrder(newOrder)}}>Create Order</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function renderCustomerEditSection()\r\n    {\r\n        return(\r\n            <div className=\"section editCustomer\">\r\n                <form onSubmit={(event) => updateCustomer(event , newOrder.customerData.id)}>\r\n                    <div class=\"group\">\r\n                        <label>First Name*</label>\r\n                        <input type=\"text\" name=\"firstname\" autoComplete=\"off\" defaultValue={newOrder.customerData.firstname}  required />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" name=\"lastname\" autoComplete=\"off\" defaultValue={newOrder.customerData.lastname}  />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>Telephone*</label>\r\n                        <input type=\"text\" name=\"mobilephone\" autoComplete=\"off\" defaultValue={newOrder.customerData.mobilephone} required />\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <input style={{width : 100}} type=\"submit\" value=\"Submit\" className=\"btn btn-success f_right\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function renderAddressEditSection()\r\n    {\r\n        return(\r\n            <div className=\"section editAddress\">\r\n                <form onSubmit={(event) => updateAddress(event , newOrder.addressData.id)}>\r\n                    <div class=\"group\">\r\n                        <label>Name*</label>\r\n                        <input type=\"text\" name=\"name\" autoComplete=\"off\" defaultValue={newOrder.addressData.name} required />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>Line 1*</label>\r\n                        <input type=\"text\" name=\"line1\" autoComplete=\"off\" defaultValue={newOrder.addressData.line1} required />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>Line 2</label>\r\n                        <input type=\"text\" name=\"line2\" autoComplete=\"off\" defaultValue={newOrder.addressData.line2}  />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>City*</label>\r\n                        <input type=\"text\" name=\"city\" autoComplete=\"off\" defaultValue={newOrder.addressData.city} required />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>County</label>\r\n                        <input type=\"text\" name=\"county\" autoComplete=\"off\" defaultValue={newOrder.addressData.city} />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>Postcode*</label>\r\n                        <input type=\"text\" name=\"postalcode\" autoComplete=\"off\" defaultValue={newOrder.addressData.postalcode} required />\r\n                    </div>\r\n                    <input style={{width : 100}} type=\"submit\" value=\"Submit\" className=\"btn btn-success f_right\"/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    function ShowAddressForm(cust_id){\r\n        customer_id = cust_id;\r\n        changeShowSection('addressform');\r\n    }\r\n\r\n    function renderAddressForm(){\r\n        return (\r\n\r\n            <div className=\"customerSearch\">\r\n                <h4 className=\"center\">Create New Address</h4>\r\n                {\r\n                    // <CustomersResults updateFunction={staffMemberSelected}/>\r\n                    <AddressForm CustomerForm={ShowCustomerForm} form_submit = {CreateAddressForm}/>\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    function CreateAddressForm(data){\r\n        CreateAddress({variables:{name:data.name , line1:data.line1 , line2:data.line2 , postalcode:data.postalcode , city:data.city , country:data.country, customer_id:customer_id}});\r\n    }\r\n\r\n    function renderCustomerForm(){\r\n        return (\r\n\r\n            <div className=\"customerSearch\">\r\n                <h4 className=\"center\">Create New Customer</h4>\r\n                {\r\n                    // <CustomersResults updateFunction={staffMemberSelected}/>\r\n                    <CustomerForm CustomerForm={ShowCustomerForm} form_submit = {CreateCustomerForm}/>\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n    return (\r\n        <section id=\"CreateOrder\" className=\"panel forty\">\r\n            {renderCreatOrderNavigation()}\r\n            {showSection === 'type' ? renderTypeSection() : null}\r\n            {showSection === 'customer' ? renderCustomerSearch() : null}\r\n            {showSection === 'staff' ? renderStaffList() : null}\r\n            {showSection === 'summary' ? renderSummarySection() : null}\r\n            {showSection === 'editCustomer' ? renderCustomerEditSection() : null}\r\n            {showSection === 'editAddress' ? renderAddressEditSection() : null}\r\n            {showSection === 'customerform' ? renderCustomerForm() : null}\r\n            {showSection === 'addressform' ? renderAddressForm() : null}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CreateOrderPanel;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DisplayUtility.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DateTimeClock.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\Tabs.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomerSearchResults.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\StaffSearchResults.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\CompleteOrdersTab.js",["211"],"import {useState} from 'react';\r\nimport OrderListItem from '../../ui/OrderListItem';\r\nimport {NoDataToDisplay} from '../../ui/DisplayUtility';\r\n\r\nfunction CompleteOrdersTab(props)\r\n{\r\n    const [subTab,setSubtab] = useState(\"complete\");\r\n\r\n    function getContents()\r\n    {\r\n        var toDisplay = props.orders.filter((order) => {\r\n            if(subTab === \"complete\" && (order.status === \"fulfilled\" || order.status === \"delivered\" || order.status === \"collected\"))\r\n            {return order;}\r\n            if(subTab === \"failed\" && (order.status === \"couldnotdeliver\" || order.status === \"didnotcollect\" || order.status === \"cancelled\" || order.status === \"rejected\" ))\r\n            {return order;}\r\n        });\r\n\r\n        if(toDisplay.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n\r\n        return toDisplay.map((o) => {return getOrderJSX(o)});\r\n    }\r\n\r\n    function getOrderJSX(order)\r\n    {\r\n        return <OrderListItem key={order.id} order={order}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"subTabsContainer\">\r\n                <div className={\"subTab\"+ (subTab === \"complete\" ? \" selected\" : \"\")} onClick={()=>{setSubtab(\"complete\")}}>Complete</div>\r\n                <div className={\"subTab\" + (subTab === \"failed\" ? \" selected\" : \"\")} onClick={()=>{setSubtab(\"failed\")}}>Failed</div>\r\n            </div>\r\n            <div className=\"subTabWindow\">\r\n                {getContents()}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CompleteOrdersTab;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\InHouseOrdersTab.js",["212"],"import {useState} from 'react';\r\nimport OrderListItem from '../../ui/OrderListItem';\r\nimport {NoDataToDisplay} from '../../ui/DisplayUtility';\r\n\r\nfunction InHouseOrdersTab(props)\r\n{\r\n    const [subTab,setSubtab] = useState(\"open\");\r\n\r\n    function getContents()\r\n    {\r\n        var toDisplay = props.orders.filter((order) => {\r\n            if(order.type === \"eatin\" && subTab === \"paid\" && order.paymentstatus === \"paid\"){return order;}\r\n            if(order.type === \"eatin\" && subTab === \"open\" && order.paymentstatus !== \"paid\"){return order;}\r\n        });\r\n\r\n        if(toDisplay.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n\r\n        return toDisplay.map((o) => {return getOrderJSX(o)});\r\n    }\r\n\r\n    function getOrderJSX(order)\r\n    {\r\n        return <OrderListItem key={order.id} order={order}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"subTabsContainer\">\r\n                <div className={\"subTab\"+ (subTab === \"open\" ? \" selected\" : \"\")} onClick={()=>{setSubtab(\"open\")}}>Open</div>\r\n                <div className={\"subTab\" + (subTab === \"paid\" ? \" selected\" : \"\")} onClick={()=>{setSubtab(\"paid\")}}>Paid</div>\r\n            </div>\r\n            <div className=\"subTabWindow\">\r\n                {getContents()}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InHouseOrdersTab;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\ProcessingOrdersTab.js",["213"],"import OrderListItem from '../../ui/OrderListItem';\r\nimport {NoDataToDisplay} from '../../ui/DisplayUtility';\r\n\r\nfunction ProcessingOrdersTab(props)\r\n{\r\n    function getContents()\r\n    {\r\n        if(props.orders.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n        \r\n        var toDisplay = props.orders.filter((order) => {\r\n            if(order.status === \"inkitchen\" || order.status === \"outfordelivery\" || order.status === \"awaitingcollection\"){return order;}\r\n        });\r\n\r\n        if(toDisplay.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n\r\n        return toDisplay.map((o) => {return <OrderListItem key={o.id} order={o}/>});\r\n    }\r\n\r\n    return getContents();\r\n}\r\n\r\nexport default ProcessingOrdersTab;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\CategorySelector.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\ProductEditor.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\ProductSelector.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\GroupProductSelector.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\NewOrdersTab.js",["214"],"//import {useState} from 'react';\r\n//import { useSetCurrentOrder } from '../../../../contexts/OrderContext';\r\n\r\n//Utility\r\n//import {DateTimeToHumanTime} from \"../../ui/DateTimeUtils\";\r\nimport {NoDataToDisplay} from '../../ui/DisplayUtility';\r\nimport OrderListItem from '../../ui/OrderListItem';\r\n\r\n//import { useQuery, gql } from '@apollo/client';\r\n\r\n\r\n\r\n\r\nfunction NewOrdersTab(props)\r\n{\r\n    \r\n\r\n    //const [orders,setOrders] = useState(null);\r\n\r\n    //Use Set Current Order\r\n    //const setCurrentOrder = useSetCurrentOrder();\r\n\r\n    //if (loading) return LoadingData();\r\n    //if (error) return <p>Error :(</p>;\r\n\r\n    \r\n    \r\n\r\n    /*function getOrderName(order)\r\n    {\r\n        var t = order.type\r\n        if(t === \"eatin\" || t === \"walkin\")\r\n        {\r\n            return(<>ANON - {order.type.toUpperCase()}</>);\r\n        }\r\n        else if(t === \"staff\")\r\n        {\r\n            return (<>{order.staff_member.firstname} {order.staff_member.lastname}</> );\r\n        }\r\n        else\r\n        {\r\n            return (<>{order.customer.firstname} {order.customer.lastname}</> );\r\n        }\r\n    }*/\r\n\r\n\r\n    //console.log(data);\r\n    /*return props.orders.map((order) => (\r\n        <div className=\"miniOrder\" key={order.id} data-id={order.id} onClick={() => {setCurrentOrder(order.id)}}>\r\n            <div className=\"brandArea\">\r\n                <div className=\"brandLogoPlaceholder\">B</div>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"details\">\r\n                    {getOrderName(order)} {order.type === \"delivery\" ? (\"(\" + order.address.postalcode + \")\") : null}\r\n                </div>\r\n                <div className=\"subDetails\">\r\n                    #{order.ordernumber} | {order.type.charAt(0).toUpperCase() + order.type.slice(1)} | Placed: {DateTimeToHumanTime(order.created_at)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ));*/\r\n\r\n    function getContents()\r\n    {\r\n        if(props.orders.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n\r\n        var toDisplay = props.orders.filter((order) => {\r\n            if(order.status === \"new\"){return order;}\r\n        });\r\n\r\n        if(toDisplay.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n\r\n        return toDisplay.map((o) => {return <OrderListItem key={o.id} order={o}/>});\r\n    }\r\n\r\n    return getContents();\r\n\r\n}\r\n\r\nexport default NewOrdersTab;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderReceipt.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\OrderSettings.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\payorder\\Payment.js",["215","216","217","218","219"],"import {useState} from 'react';\r\nimport * as _itemEditUtils from '../../../../../service/itemEditUtils'\r\n\r\n\r\nconst SPLIT_LIMIT = 4;\r\n\r\nexport default function Payment(props)\r\n{\r\n    //console.log(\"Payment ORder Details: \", props.currentOrder);\r\n\r\n    const ORDER_TOTAL = _itemEditUtils.calculateOrderTotal(props.currentOrder.line_items);\r\n    const DELIVERY_ORDER = props.currentOrder.type === \"delivery\";\r\n\r\n    const [typedPrefix,updateTypedPrefix] = useState(\"\");\r\n    const [typed,updateTyped] = useState(\"\");\r\n    const [changeDue,setChangeDue] = useState(false);\r\n\r\n    const [paymentMethod,setpaymentMethod] = useState(\"Cash\");\r\n\r\n    const [discountMode,setDiscountMode] = useState(false);\r\n    const [discountMethod,setDiscountMethod] = useState(\"£\");\r\n    const [displayDiscountAmount,setDisplayDiscountAmount] = useState(0);\r\n\r\n    const [splitMode,setSplitMode] = useState(false);\r\n    const [splitWays,setSplitWays] = useState(null);\r\n    //const [splitResult,setSplitResult] = useState([]);\r\n\r\n    //Payment Settings\r\n    const [sendPaymentLink,setSendPaymentLink] = useState(true);\r\n    const [printReceipt,setPrintReceipt] = useState(true);\r\n\r\n\r\n    //Use Effect to update split after discount changed\r\n    /*useEffect(() => {\r\n        //Check if we need to re-calculate split\r\n        if(splitWays !== null && splitResult !== [])\r\n        {\r\n            calculateSplit(splitWays);\r\n        }\r\n    }, [displayDiscountAmount,calculateSplit,splitResult,splitWays]);*/\r\n\r\n\r\n    //Flags to show / hide keys\r\n    const showChangeBtn = paymentMethod === \"Cash\" && discountMode !== true && splitMode !== true && !DELIVERY_ORDER;\r\n    const showExactBtn = paymentMethod === \"Cash\" && discountMode !== true && splitMode !== true && !DELIVERY_ORDER;\r\n    const showNotesBtns = ((paymentMethod === \"Cash\" && discountMode !== true && splitMode !== true) || (discountMode === true && discountMethod === \"£\")) && !DELIVERY_ORDER;\r\n    const showPercentBtns = (discountMode === true && discountMethod === \"%\") && !DELIVERY_ORDER;\r\n\r\n\r\n\r\n    function orderBtnHandler()\r\n    {\r\n        //Update Order status to 'inkitchen'\r\n        var orderStatus = 'inkitchen';\r\n        props.changeOrderStatus(orderStatus)\r\n    }\r\n\r\n    function payBtnHandler()\r\n    {   \r\n        //Set order payment status to paid\r\n        var discountAmnt = parseFloat(displayDiscountAmount);\r\n        var subtotal = ORDER_TOTAL;\r\n        var orderTotal = parseFloat(ORDER_TOTAL - discountAmnt);\r\n        var paymentStatus = \"paid\";\r\n\r\n        //Update Order Payment Status\r\n        props.changeOrderPaymentStatus(\r\n            paymentStatus,\r\n            paymentMethod.toLowerCase(),\r\n            subtotal,\r\n            orderTotal,\r\n            discountAmnt\r\n        );\r\n    }\r\n\r\n\r\n    const calculateSplitFn = (p, d, n) =>\r\n    {\r\n        const fill = (n, x) =>(Array (n) .fill (x));\r\n        const concat = (xs, ys) =>(xs .concat (ys));\r\n        const quotrem = (n, d) =>([ Math .floor (n / d), Math .floor (n % d)]);\r\n        const e = Math .pow (10, p);\r\n        const [ q, r ] = quotrem (n * e, d);\r\n\r\n        return concat( fill (r, (q + 1) / e), fill (d - r, q / e))\r\n    }\r\n\r\n    function calculateDiscount()\r\n    {\r\n        var discountAmount = 0;\r\n        var toDiscountrom = ORDER_TOTAL;\r\n\r\n        if(discountMethod === \"%\")\r\n        {\r\n            var p = typed;\r\n            discountAmount = (toDiscountrom / 100) * p;\r\n        }\r\n        else\r\n        {\r\n            \r\n            discountAmount = parseFloat(typed);\r\n        }\r\n\r\n        if(discountAmount > toDiscountrom){discountAmount = toDiscountrom;}\r\n\r\n        setDisplayDiscountAmount(discountAmount);\r\n        setDiscountMode(false);\r\n        setDiscountMethod(\"£\");\r\n        updateTyped(\"\");\r\n        updateTypedPrefix(\"\");\r\n\r\n        \r\n    }\r\n\r\n\r\n    function calculateSplit(ways)\r\n    {\r\n        var toSplit = ORDER_TOTAL - displayDiscountAmount;\r\n\r\n        var each = calculateSplitFn(2,parseInt(ways),toSplit);\r\n\r\n        return each;\r\n        //setSplitResult(each);\r\n    }\r\n\r\n    \r\n    /*function getNextPaymentMethod()\r\n    {\r\n        var n = \"\";\r\n        switch(paymentMethod)\r\n        {\r\n            case \"Cash\" :\r\n                n = \"Card\";\r\n            break;\r\n            case \"Card\":\r\n                n = \"Link\";\r\n            break;\r\n            default: //Link\r\n                n = \"Cash\";\r\n            break;\r\n        }\r\n        return n;\r\n    }*/\r\n\r\n\r\n    function keyPressed(event)\r\n    {\r\n        var val = event.target.dataset.val;\r\n\r\n        switch(val)\r\n        {\r\n            case \"DISCOUNT\" :\r\n                if(splitMode === true)\r\n                {\r\n                    setSplitMode(false);\r\n                    updateTyped(\"\");\r\n                    updateTypedPrefix(\"\");\r\n                    setSplitWays(null);\r\n                }\r\n\r\n                if(discountMode === true){\r\n                    setDiscountMode(false);\r\n                    updateTyped(\"\");\r\n                    updateTypedPrefix(\"\");\r\n                }\r\n                else\r\n                {\r\n                    setDiscountMode(true);\r\n                    updateTyped(\"\");\r\n                    updateTypedPrefix(\"Enter Discount Amount: \");\r\n                }\r\n            break;\r\n            case \"£\" :\r\n                if(discountMode === true)\r\n                {\r\n                    setDiscountMethod(\"%\");\r\n                }\r\n            break;\r\n            case \"%\" :\r\n                if(discountMode === true)\r\n                {\r\n                    setDiscountMethod(\"£\");\r\n                }\r\n            break;\r\n            case \"APPLY\":\r\n                if(discountMode === true)\r\n                {\r\n                    calculateDiscount();\r\n                }\r\n                else if(splitMode === true && typed !== \"\" && !isNaN(typed) && typed <= SPLIT_LIMIT)\r\n                {\r\n                    setSplitWays(typed);\r\n                    calculateSplit(typed);\r\n\r\n                    //Now deactive split mode\r\n                    setSplitMode(false);\r\n                    updateTyped(\"\");\r\n                    updateTypedPrefix(\"\");\r\n                }\r\n            break;\r\n            case \"pm_Cash\" :\r\n                setpaymentMethod(\"Cash\");\r\n            break;\r\n            case \"pm_Card\" :\r\n                setpaymentMethod(\"Card\");\r\n            break;\r\n            case \"pm_Link\" :\r\n                setpaymentMethod(\"Link\");\r\n            break;\r\n            case \"SPLIT\" :\r\n                if(discountMode === true)\r\n                {\r\n                    setDiscountMode(false);\r\n                    setDiscountMethod(\"£\");\r\n                    updateTyped(\"\");\r\n                }\r\n\r\n                if(splitMode === true)\r\n                {\r\n                    setSplitMode(false);\r\n                   // setSplitWays(null);\r\n                    updateTypedPrefix(\"\");\r\n                    updateTyped(\"\");\r\n                }\r\n                else\r\n                {\r\n                    setSplitMode(true);\r\n                    updateTypedPrefix(\"Split the total how many ways: \");\r\n                }\r\n\r\n                \r\n            break;\r\n            case \"CHANGE\":\r\n                setChangeDue( (parseFloat(typed) - ORDER_TOTAL).toFixed(2) );\r\n                updateTyped(\"\");\r\n            break\r\n            case \"EXACT\" :\r\n                setChangeDue(\"£0.00\");\r\n            break;\r\n            case \"CE\" :\r\n                if(discountMode){/* setDiscountedTotal(0);*/ }\r\n                updateTyped((discountMode ? \"-\" : \"\"));\r\n            break;\r\n            case \"note_5\" :\r\n                updateTyped(\"5.00\");\r\n            break;\r\n            case \"note_10\" :\r\n                updateTyped(\"10.00\");\r\n            break;\r\n            case \"note_20\" :\r\n                updateTyped(\"20.00\");\r\n            break;\r\n            case \"note_50\" :\r\n                updateTyped(\"50.00\");\r\n            break;\r\n            case \"percent_5\" :\r\n                updateTyped(\"5\");\r\n            break;\r\n            case \"percent_10\" :\r\n                updateTyped(\"10\");\r\n            break;\r\n            case \"percent_15\" :\r\n                updateTyped(\"15\");\r\n            break;\r\n            case \"percent_20\" :\r\n                updateTyped(\"20\");\r\n            break;\r\n            default:\r\n                var nval = typed + val;\r\n                updateTyped(nval);\r\n            break;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"orderPaymentWrapper\">\r\n                <div id=\"OrderPaymentReadout\">\r\n                    <div className=\"content\">\r\n                        <div className=\"orderTotaling\">\r\n                            <div className=\"due\">{displayDiscountAmount > 0  ? \"SUBTOTAL\" : \"TOTAL DUE\"}: £{ORDER_TOTAL.toFixed(2)}</div>\r\n                            {\r\n                                displayDiscountAmount > 0 ? \r\n                                (\r\n                                    <>\r\n                                        <div className=\"discount\">DISCOUNT: £{displayDiscountAmount.toFixed(2)}</div>\r\n                                        <div className=\"newtotal\">TOTAL: £{( ORDER_TOTAL - displayDiscountAmount).toFixed(2)}</div>\r\n                                    </>\r\n                                ) \r\n                                : \r\n                                null\r\n                            }\r\n                            {\r\n                                splitWays !== null ?\r\n                                (\r\n                                    calculateSplit(splitWays).map((split, index) => (<div key={index} className=\"split\">Payment {index +1}: £{split}</div>))\r\n                                ) \r\n                                : null\r\n                            }\r\n                            {changeDue ? (<div className=\"change\">CHANGE: {changeDue}</div>) : null}\r\n                        </div>\r\n                        <div className=\"submitSettings\">\r\n                            <div className=\"setting\">\r\n                                <label>Send Payment Link?</label>\r\n                                <label className=\"switchSlider\">\r\n                                    <input type=\"checkbox\" onChange={()=>{setSendPaymentLink(!sendPaymentLink);}} checked={sendPaymentLink}/>\r\n                                    <span className=\"slider\"></span>\r\n                                    <span className=\"opt\">Yes</span>\r\n                                    <span className=\"opt\">No</span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"setting\">\r\n                                <label>Print Receipt Now?</label>\r\n                                <label className=\"switchSlider\">\r\n                                    <input type=\"checkbox\" onChange={()=>{setPrintReceipt(!printReceipt);}} checked={printReceipt}/>\r\n                                    <span className=\"slider\"></span>\r\n                                    <span className=\"opt\">Yes</span>\r\n                                    <span className=\"opt\">No</span>\r\n                                </label>\r\n                            </div>\r\n                            Delivery Time: ASAP\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"typeBar\">\r\n                        {\r\n                            discountMode === true ?\r\n                            (\r\n                                typedPrefix + discountMethod + typed\r\n                            ) \r\n                            :\r\n                            (\r\n                                typedPrefix + typed\r\n                            )\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div id=\"OrderPaymentControls\">\r\n                    <div className=\"keypad\">\r\n                        <div className={\"key \" + (discountMode === true ? \"action\" : \"\")} onClick={keyPressed} data-val=\"DISCOUNT\">DISCNT</div>\r\n                        <div className={\"key \" + (splitMode === true ? \"action\" : \"\")} onClick={keyPressed} data-val=\"SPLIT\">SPLIT</div>\r\n                        {\r\n                            props.currentOrder.status === \"new\" ? \r\n                            (\r\n                                <div className=\"key success\" onClick={orderBtnHandler}>ORDER</div>\r\n                            )\r\n                            : \r\n                            (<div className=\"key\"></div>)\r\n                        }\r\n                        {\r\n                            discountMode === true ? \r\n                            (\r\n                                <div className=\"key special\"  onClick={keyPressed} data-val={discountMethod === \"£\" ? \"£\" : \"%\"}>\r\n                                    {discountMethod === \"£\" ? \"%\" : \"£\"}\r\n                                </div>\r\n                            )\r\n                            :\r\n                            paymentMethod === \"Cash\" && splitMode !== true && !DELIVERY_ORDER ? \r\n                            (\r\n                                <div className=\"key function\" onClick={keyPressed} data-val=\"pm_Card\">Pay Card</div>\r\n                            ) \r\n                            : \r\n                            paymentMethod === \"Card\" && !DELIVERY_ORDER ? \r\n                            (\r\n                                <div className={\"key function\"} onClick={keyPressed} data-val=\"pm_Cash\">Pay Cash</div>\r\n                            )\r\n                            :\r\n                            (<div className=\"key\"></div>) \r\n                        }\r\n                        {\r\n                            discountMode === true || splitMode === true ? \r\n                            (\r\n                                <div className=\"key success\" onClick={keyPressed} data-val=\"APPLY\">APPLY</div>\r\n                            )\r\n                            :\r\n                            (<div className={\"key \" + (sendPaymentLink === true ? \"action\" : \"\")} onClick={()=>{setSendPaymentLink(!sendPaymentLink)}}>PAY LINK?</div>)\r\n                        }\r\n                        \r\n\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"7\">7</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"8\">8</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"9\">9</div>\r\n                        {\r\n                            showNotesBtns ? \r\n                            (\r\n                                <div className=\"key special\" onClick={keyPressed} data-val=\"note_5\">£5</div>\r\n                            ) \r\n                            : \r\n                            showPercentBtns ? \r\n                            (\r\n                                <div className=\"key special\" onClick={keyPressed} data-val=\"percent_5\">5%</div>\r\n                            ) \r\n                            : \r\n                            (\r\n                                <div className=\"key\"></div>\r\n                            )\r\n                        }\r\n                        {\r\n                            showExactBtn ? \r\n                            (\r\n                                <div className=\"key action\" onClick={keyPressed} data-val=\"EXACT\">EXACT</div>\r\n                            ) \r\n                            :\r\n                            (\r\n                                <div className=\"key\"></div>\r\n                            )\r\n                        }\r\n                        \r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"4\">4</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"5\">5</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"6\">6</div>\r\n                        {\r\n                            showNotesBtns ? \r\n                            (\r\n                                <div className=\"key special\" onClick={keyPressed} data-val=\"note_10\">£10</div>\r\n                            ) \r\n                            : \r\n                            showPercentBtns ? \r\n                            (\r\n                                <div className=\"key special\" onClick={keyPressed} data-val=\"percent_10\">10%</div>\r\n                            ) \r\n                            : \r\n                            (\r\n                                <div className=\"key\"></div>\r\n                            )\r\n                        }\r\n                        {\r\n                            showChangeBtn ? \r\n                            (\r\n                                <div className=\"key action\" onClick={keyPressed} data-val=\"CHANGE\">CHANGE</div>\r\n                            ) \r\n                            : \r\n                            (\r\n                                <div className=\"key\"></div>\r\n                            )\r\n                        }\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"1\">1</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"2\">2</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"3\">3</div>\r\n                        {\r\n                            showNotesBtns ? \r\n                            (\r\n                                <div className=\"key special\" onClick={keyPressed} data-val=\"note_20\">£20</div>\r\n                            ) \r\n                            : \r\n                            showPercentBtns ? \r\n                            (\r\n                                <div className=\"key special\" onClick={keyPressed} data-val=\"percent_15\">15%</div>\r\n                            ) \r\n                            : \r\n                            (\r\n                                <div className=\"key\"></div>\r\n                            )\r\n                        }\r\n                        <div className=\"key danger\" onClick={props.cancelOrderPayment}>CANCEL</div>\r\n                        <div className=\"key function\" onClick={keyPressed} data-val=\".\">.</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"0\">0</div>\r\n                        <div className=\"key function\" onClick={keyPressed} data-val=\"CE\">CE</div>\r\n                        {\r\n                            showNotesBtns ? \r\n                            (\r\n                                <div className=\"key special\" onClick={keyPressed} data-val=\"note_50\">£50</div>\r\n                            ) \r\n                            : \r\n                            showPercentBtns ? \r\n                            (\r\n                                <div className=\"key special\" onClick={keyPressed} data-val=\"percent_20\">20%</div>\r\n                            ) \r\n                            : \r\n                            (\r\n                                <div className=\"key\"></div>\r\n                            )\r\n                        }\r\n                        \r\n                        <div className=\"key success\" onClick={payBtnHandler}>{!DELIVERY_ORDER ? \"PAID\" : \"SUBMIT\"}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\OrderListItem.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\CurrentOrderHeader.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderItems.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\printer.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderActions.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\OptionsTab.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\itemEditUtils.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\ExtrasTab.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\AllergensTab.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\tabs\\NotesTab.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\tabs\\GeneralTab.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DateTimeUtils.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomerForm.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\AddressForm.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomersResults.js",["220"],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\AddressesResults.js",["221"],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":6,"column":9,"nodeType":"228","messageId":"229","endLine":6,"endColumn":12},{"ruleId":"226","severity":1,"message":"230","line":11,"column":9,"nodeType":"228","messageId":"229","endLine":11,"endColumn":27},{"ruleId":"226","severity":1,"message":"231","line":11,"column":29,"nodeType":"228","messageId":"229","endLine":11,"endColumn":44},{"ruleId":"226","severity":1,"message":"232","line":11,"column":46,"nodeType":"228","messageId":"229","endLine":11,"endColumn":62},{"ruleId":"226","severity":1,"message":"233","line":195,"column":39,"nodeType":"228","messageId":"229","endLine":195,"endColumn":62},{"ruleId":"226","severity":1,"message":"234","line":195,"column":71,"nodeType":"228","messageId":"229","endLine":195,"endColumn":92},{"ruleId":"226","severity":1,"message":"235","line":201,"column":38,"nodeType":"228","messageId":"229","endLine":201,"endColumn":60},{"ruleId":"226","severity":1,"message":"236","line":201,"column":69,"nodeType":"228","messageId":"229","endLine":201,"endColumn":89},{"ruleId":"226","severity":1,"message":"237","line":206,"column":39,"nodeType":"228","messageId":"229","endLine":206,"endColumn":68},{"ruleId":"226","severity":1,"message":"238","line":206,"column":77,"nodeType":"228","messageId":"229","endLine":206,"endColumn":104},{"ruleId":"226","severity":1,"message":"239","line":211,"column":38,"nodeType":"228","messageId":"229","endLine":211,"endColumn":66},{"ruleId":"226","severity":1,"message":"240","line":211,"column":75,"nodeType":"228","messageId":"229","endLine":211,"endColumn":101},{"ruleId":"241","severity":1,"message":"242","line":11,"column":53,"nodeType":"243","messageId":"244","endLine":11,"endColumn":55},{"ruleId":"241","severity":1,"message":"242","line":11,"column":53,"nodeType":"243","messageId":"244","endLine":11,"endColumn":55},{"ruleId":"241","severity":1,"message":"242","line":13,"column":53,"nodeType":"243","messageId":"244","endLine":13,"endColumn":55},{"ruleId":"241","severity":1,"message":"242","line":71,"column":53,"nodeType":"243","messageId":"244","endLine":71,"endColumn":55},{"ruleId":"245","severity":1,"message":"246","line":79,"column":32,"nodeType":"247","messageId":"248","endLine":79,"endColumn":47,"fix":"249"},{"ruleId":"245","severity":1,"message":"250","line":80,"column":36,"nodeType":"247","messageId":"248","endLine":80,"endColumn":46,"fix":"251"},{"ruleId":"245","severity":1,"message":"252","line":81,"column":37,"nodeType":"247","messageId":"248","endLine":81,"endColumn":48,"fix":"253"},{"ruleId":"245","severity":1,"message":"252","line":81,"column":58,"nodeType":"247","messageId":"248","endLine":81,"endColumn":69,"fix":"254"},{"ruleId":"245","severity":1,"message":"255","line":82,"column":19,"nodeType":"247","messageId":"248","endLine":82,"endColumn":28,"fix":"256"},{"ruleId":"226","severity":1,"message":"257","line":19,"column":34,"nodeType":"228","messageId":"229","endLine":19,"endColumn":41},{"ruleId":"226","severity":1,"message":"257","line":24,"column":34,"nodeType":"228","messageId":"229","endLine":24,"endColumn":41},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'deleteDevicesCache' is defined but never used.","'setDevicesCache' is defined but never used.","'setSettingsCache' is defined but never used.","'customermutationLoading' is assigned a value but never used.","'CustomermutationError' is assigned a value but never used.","'addressmutationLoading' is assigned a value but never used.","'addressmutationError' is assigned a value but never used.","'updatecustomermutationLoading' is assigned a value but never used.","'updatecustomermutationError' is assigned a value but never used.","'updateaddressmutationLoading' is assigned a value but never used.","'updateaddressmutationError' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-whitespace-before-property","Unexpected whitespace before property fill.","MemberExpression","unexpectedWhitespace",{"range":"260","text":"261"},"Unexpected whitespace before property concat.",{"range":"262","text":"261"},"Unexpected whitespace before property floor.",{"range":"263","text":"261"},{"range":"264","text":"261"},"Unexpected whitespace before property pow.",{"range":"265","text":"261"},"'refetch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2844,2846],".",[2895,2897],[2952,2954],[2973,2975],[3015,3017]]