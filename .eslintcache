[{"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\index.js":"1","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\App.js":"2","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\reportWebVitals.js":"3","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\storage.js":"4","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\contexts\\OrderContext.js":"5","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\contexts\\UserContext.js":"6","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\Setup.js":"7","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\Till.js":"8","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\AuthLayer.js":"9","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\queries.js":"10","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\SignOn.js":"11","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\clientHandler.js":"12","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\ManageOrdersPanel.js":"13","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\OrderEditor.js":"14","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\CreateOrderPanel.js":"15","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DisplayUtility.js":"16","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DateTimeClock.js":"17","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\Tabs.js":"18","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomerSearchResults.js":"19","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\StaffSearchResults.js":"20","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\CompleteOrdersTab.js":"21","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\InHouseOrdersTab.js":"22","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\ProcessingOrdersTab.js":"23","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\CategorySelector.js":"24","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\ProductEditor.js":"25","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\ProductSelector.js":"26","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\GroupProductSelector.js":"27","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\NewOrdersTab.js":"28","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderReceipt.js":"29","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\OrderSettings.js":"30","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\payorder\\Payment.js":"31","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\OrderListItem.js":"32","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\CurrentOrderHeader.js":"33","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderItems.js":"34","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\printer.js":"35","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderActions.js":"36","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\OptionsTab.js":"37","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\itemEditUtils.js":"38","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\ExtrasTab.js":"39","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\AllergensTab.js":"40","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\tabs\\NotesTab.js":"41","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\tabs\\GeneralTab.js":"42","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DateTimeUtils.js":"43","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomerForm.js":"44","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\AddressForm.js":"45","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomersResults.js":"46","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\AddressesResults.js":"47","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\ManageOrders.js":"48","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\UserSettings.js":"49","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\cache\\LoadCache.js":"50","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\payorder\\RefundByCash.js":"51","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\payorder\\PaymentMethod.js":"52","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\tabs\\StatusTab.js":"53"},{"size":812,"mtime":1628180332104,"results":"54","hashOfConfig":"55"},{"size":2529,"mtime":1628180331986,"results":"56","hashOfConfig":"55"},{"size":375,"mtime":1628180332120,"results":"57","hashOfConfig":"55"},{"size":3407,"mtime":1628180332120,"results":"58","hashOfConfig":"55"},{"size":1025,"mtime":1628180332104,"results":"59","hashOfConfig":"55"},{"size":883,"mtime":1628180332104,"results":"60","hashOfConfig":"55"},{"size":9129,"mtime":1628502573455,"results":"61","hashOfConfig":"55"},{"size":3491,"mtime":1628180332089,"results":"62","hashOfConfig":"55"},{"size":614,"mtime":1628180332089,"results":"63","hashOfConfig":"55"},{"size":7447,"mtime":1628509938559,"results":"64","hashOfConfig":"55"},{"size":6706,"mtime":1628180332089,"results":"65","hashOfConfig":"55"},{"size":1329,"mtime":1628180332120,"results":"66","hashOfConfig":"55"},{"size":2921,"mtime":1628180332033,"results":"67","hashOfConfig":"55"},{"size":16048,"mtime":1628582955995,"results":"68","hashOfConfig":"55"},{"size":23523,"mtime":1628180332033,"results":"69","hashOfConfig":"55"},{"size":2477,"mtime":1628180332089,"results":"70","hashOfConfig":"55"},{"size":718,"mtime":1628180332073,"results":"71","hashOfConfig":"55"},{"size":1135,"mtime":1628180332018,"results":"72","hashOfConfig":"55"},{"size":4858,"mtime":1628180332002,"results":"73","hashOfConfig":"55"},{"size":1127,"mtime":1628180332002,"results":"74","hashOfConfig":"55"},{"size":1548,"mtime":1628180332018,"results":"75","hashOfConfig":"55"},{"size":1372,"mtime":1628180332018,"results":"76","hashOfConfig":"55"},{"size":813,"mtime":1628180332018,"results":"77","hashOfConfig":"55"},{"size":1315,"mtime":1628180332033,"results":"78","hashOfConfig":"55"},{"size":8503,"mtime":1628180332049,"results":"79","hashOfConfig":"55"},{"size":2096,"mtime":1628180332049,"results":"80","hashOfConfig":"55"},{"size":1520,"mtime":1628180332049,"results":"81","hashOfConfig":"55"},{"size":2478,"mtime":1628180332018,"results":"82","hashOfConfig":"55"},{"size":1045,"mtime":1628180332057,"results":"83","hashOfConfig":"55"},{"size":1945,"mtime":1628254728848,"results":"84","hashOfConfig":"55"},{"size":23642,"mtime":1628583898831,"results":"85","hashOfConfig":"55"},{"size":1521,"mtime":1628180332089,"results":"86","hashOfConfig":"55"},{"size":1506,"mtime":1628180332073,"results":"87","hashOfConfig":"55"},{"size":2910,"mtime":1628180332057,"results":"88","hashOfConfig":"55"},{"size":5738,"mtime":1628180332120,"results":"89","hashOfConfig":"55"},{"size":1848,"mtime":1628180332057,"results":"90","hashOfConfig":"55"},{"size":4983,"mtime":1628180332057,"results":"91","hashOfConfig":"55"},{"size":532,"mtime":1628180332120,"results":"92","hashOfConfig":"55"},{"size":3053,"mtime":1628180332057,"results":"93","hashOfConfig":"55"},{"size":3700,"mtime":1628180332049,"results":"94","hashOfConfig":"55"},{"size":867,"mtime":1628180332073,"results":"95","hashOfConfig":"55"},{"size":1460,"mtime":1628180332057,"results":"96","hashOfConfig":"55"},{"size":142,"mtime":1628180332089,"results":"97","hashOfConfig":"55"},{"size":1301,"mtime":1628180332002,"results":"98","hashOfConfig":"55"},{"size":1462,"mtime":1628180332002,"results":"99","hashOfConfig":"55"},{"size":1453,"mtime":1627658725156,"results":"100","hashOfConfig":"55"},{"size":1721,"mtime":1627658725141,"results":"101","hashOfConfig":"55"},{"size":1241,"mtime":1628180332033,"results":"102","hashOfConfig":"55"},{"size":1211,"mtime":1628180332033,"results":"103","hashOfConfig":"55"},{"size":1055,"mtime":1628180332033,"results":"104","hashOfConfig":"55"},{"size":8452,"mtime":1628180332073,"results":"105","hashOfConfig":"55"},{"size":2786,"mtime":1628064800132,"results":"106","hashOfConfig":"55"},{"size":3466,"mtime":1628514736576,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"ln7vuf",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"110"},"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\index.js",[],["229","230"],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\App.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\reportWebVitals.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\storage.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\contexts\\OrderContext.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\contexts\\UserContext.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\Setup.js",["231","232"],"import styles from '../../Setup.module.css'\r\nimport {gql, useLazyQuery, useQuery} from '@apollo/client'\r\nimport {useState} from 'react'\r\nimport Select from 'react-select'\r\nimport * as _storage from \"../../service/storage\";\r\nvar QRCode = require('qrcode.react');\r\n\r\nconst BRAND_QUERY= gql`\r\n    query\r\n    {\r\n        brands\r\n        {\r\n            id,\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nconst DEVICE_QUERY = gql`\r\n    query CheckDevice($code: String!)\r\n    {\r\n        devices(where:{identifier:$code})\r\n        {\r\n            id,\r\n            name,\r\n            site{\r\n                id,\r\n                name,\r\n                deliverytime,\r\n                collectiontime\r\n            },\r\n            type\r\n        }\r\n    }\r\n`;\r\n\r\nconst newCode = makeid(10);\r\n\r\n//const SITE_QUERY = gql``;\r\n\r\nfunction makeid(length) {\r\n    var result           = [];\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n      result.push(characters.charAt(Math.floor(Math.random() * charactersLength)));\r\n    }\r\n   return result.join('');\r\n}\r\n\r\nfunction Setup()\r\n{\r\n    const {loading, error, data} = useQuery(BRAND_QUERY);\r\n    \r\n    const [step,setStep] = useState(1);\r\n    const [config,setConfig] = useState({allowedAccess:false,mode:undefined,brands:[],multiBrand: false});\r\n    const [useExistingCode,setUseExistingCode] = useState(false);\r\n    const [existingCode,setExistingCode] = useState(\"\");\r\n\r\n    const [checkDevice, { loading:loadingDevice, data:deviceData }] = useLazyQuery(DEVICE_QUERY, {\r\n        variables: {code:(useExistingCode ? existingCode : newCode)},\r\n        onCompleted:(data) => {\r\n            console.log(data.devices);\r\n        }\r\n    })\r\n\r\n    if(loading){return 'Loading Setup..';}\r\n    if(error){return 'Something went wrong while loading setup..';}\r\n\r\n    if(loadingDevice)\r\n    {\r\n        return (\"Checking Device..\");\r\n    }\r\n\r\n    if(deviceData && config.allowedAccess === false && deviceData.devices.length === 1)\r\n    {\r\n        var newConfig = {...config};\r\n\r\n        newConfig.deviceConfig = deviceData.devices[0];\r\n        newConfig.allowedAccess = true;\r\n        setConfig(newConfig);\r\n       \r\n    }\r\n\r\n    function setConfigVar(event)\r\n    {\r\n        var newConfig = {...config}\r\n\r\n        var targetprop = event.target.dataset.prop;\r\n        var val = event.target.value;\r\n\r\n        if(targetprop === \"brands\")\r\n        {\r\n            val = [];\r\n            for(let x=0;x<event.target.selectedOptions.length;x++)\r\n            {\r\n                val.push(event.target.selectedOptions[x].value);\r\n            }\r\n            \r\n            newConfig.multiBrand = (val.length > 1);\r\n        }\r\n        \r\n        newConfig[targetprop] = val;\r\n        setConfig(newConfig);\r\n    }\r\n\r\n    const options = [\r\n        { value: 'chocolate', label: 'Chocolate' },\r\n        { value: 'strawberry', label: 'Strawberry' },\r\n        { value: 'vanilla', label: 'Vanilla' }\r\n    ]\r\n\r\n    function completeSetup()\r\n    {\r\n        _storage.setInitialConfig(config);\r\n        window.location.reload();\r\n    }\r\n\r\n    function renderStep()\r\n    {\r\n        console.log(config);\r\n        console.log(step);\r\n        console.log(existingCode);\r\n        var retStep;\r\n        switch(step)\r\n        {\r\n            case 1 :\r\n                retStep = (\r\n                    <div className={styles.step}>\r\n                        <div className={styles.formgroup}>\r\n                            <label className={styles.formgroup_label}>Allow Device Access</label>\r\n                            <div style={{margin:\"1em 0\"}}>\r\n                                <div className={config.allowedAccess ? styles.deviceAccessIcon : styles.deviceAccessIconDenied}>\r\n                                    <i className={config.allowedAccess ? \"icon-tick\" : \"icon-minus\"}></i>\r\n                                </div>\r\n                                <div className={styles.accessText}>{config.allowedAccess ? \"Access Granted\" : \"Access Denied\"}</div>\r\n                            </div>\r\n\r\n                                <div className=\"methodSelector\">\r\n                                    <label>Use Existing Code?</label>\r\n                                    <label className=\"switch\">\r\n                                        <input type=\"checkbox\" checked={useExistingCode} onChange={(e)=>{setUseExistingCode(e.target.checked)}}/>\r\n                                        <span className=\"slider\"></span>\r\n                                    </label>\r\n                                </div>\r\n                                {\r\n                                    useExistingCode === true ? \r\n                                    (\r\n                                        <div style={{marginBottom:\".5em\"}}>\r\n                                            <label>Enter your code:</label>\r\n                                            <input type=\"text\" value={existingCode} onChange={(e)=>{setExistingCode(e.target.value)}}/>\r\n                                        </div>\r\n                                    ) \r\n                                    :\r\n                                    (\r\n                                        <div style={{marginBottom:\".5em\"}}>\r\n                                            <div style={{marginBottom:\".5em\"}}>Your Code:</div>\r\n                                            <QRCode value={newCode} />,\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            \r\n                            <button className=\"btn btn-info\" onClick={checkDevice}>Check Again</button>\r\n                        </div>\r\n                        {\r\n                            config.allowedAccess ? (\r\n                                <div className=\"nav buttonBar\">\r\n                                    <button className=\"btn btn-danger\" disabled>Back</button>\r\n                                    <button className=\"btn btn-success\" onClick={()=>{setStep(2)}}>Next</button>\r\n                                </div>\r\n                            )\r\n                            : null\r\n                        }     \r\n                    </div>\r\n                );\r\n            break;\r\n            case 2 :\r\n                retStep = (\r\n                    <div className={styles.step}>\r\n                        <div className={styles.formgroup}>\r\n                            <label className={styles.formgroup_label}>Device Mode</label>\r\n                            <select className={styles.formcontrol_select} data-prop=\"mode\" onChange={setConfigVar} value={config.mode}>\r\n                                <option value=\"EPOS\">EPOS</option>\r\n                                <option value=\"SCREEN\">Screen</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"nav buttonBar\">\r\n                            <button className=\"btn btn-danger\" onClick={()=>{setStep(1)}}>Back</button>\r\n                            <button className=\"btn btn-success\" onClick={()=>{setStep(3)}}>Next</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            break;\r\n            case 3 :\r\n                retStep = (\r\n                    <div className={styles.step}>\r\n                        <div className={styles.formgroup}>\r\n                            <label className={styles.formgroup_label}>Select Brands</label>\r\n                            <select className={styles.formcontrol_select} data-prop=\"brands\" onChange={setConfigVar} value={config.brands} multiple>\r\n                                {\r\n                                    data.brands.map((brand)=>(\r\n                                        <option key={brand.id} value={brand.id}>{brand.name}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n\r\n\r\n\r\n                            {/*<Select options={options} style={{color : 'white'}} />*/}\r\n                        </div>\r\n                        <div className=\"nav buttonBar\">\r\n                            <button className=\"btn btn-danger\" onClick={()=>{setStep(2)}}>Back</button>\r\n                            <button className=\"btn btn-success\" onClick={completeSetup}>Finish</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            break;\r\n            default:\r\n                setStep(1);\r\n            break;\r\n        }\r\n\r\n        return retStep;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Setup}>\r\n            <div className=\"setupContainer\">\r\n                <h2 className=\"brandLogo\" style={{margin:0}}>Clear EPOS</h2>\r\n                <h4 className={styles.subtitle}>Application Setup</h4>\r\n                {\r\n                    renderStep()\r\n                }\r\n                <style>\r\n                    {\"html, body, #root{margin:0;height:100%;}\"}\r\n                </style>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Setup;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\Till.js",["233"],"import {React, useState} from \"react\";\r\n\r\nimport * as _storage from \"../../service/storage\";\r\n\r\n//Apollo\r\nimport {gql, useLazyQuery} from \"@apollo/client\";\r\n\r\n//Styles\r\nimport '../../Till.css';\r\n\r\n//Contexts\r\nimport {useCurrentOrder} from '../../contexts/OrderContext';\r\nimport {useCurrentUser} from '../../contexts/UserContext';\r\n\r\n//Queries\r\nimport {CATALOG_CACHE_QUERY} from '../../service/queries';\r\nimport {DEVICES_QUERY} from '../../service/queries';\r\n\r\n//Components\r\nimport CreateOrderPanel from '../till/panels/CreateOrderPanel';\r\nimport ManageOrdersPanel from '../till/panels/ManageOrdersPanel';\r\nimport OrderEditor from '../till/screens/ordereditor/OrderEditor';\r\nimport SignOn from '../toplevel/SignOn';\r\nimport LoadCache from '../till/panels/cache/LoadCache';\r\n\r\nfunction Till()\r\n{\r\n    //Setup Contexts\r\n    var currentOrder = useCurrentOrder();\r\n\r\n    //Get Current User Context\r\n    var currentUser = useCurrentUser();\r\n\r\n    const [awaitingCache,setAwaitingCache] = useState(false);\r\n\r\n    const [fetchCatalogCache] = useLazyQuery(CATALOG_CACHE_QUERY,{fetchPolicy:\"no-cache\",variables:{brands:_storage.getDeviceBrands()}, onCompleted:(data)=>{\r\n        _storage.setCatalogCache(data);\r\n        setAwaitingCache(false);\r\n    }});\r\n\r\n    const [getDevices] = useLazyQuery(DEVICES_QUERY, {\r\n        onCompleted: (data) =>{\r\n            setAwaitingCache(true);\r\n            _storage.setDevicesCache(data.devices);\r\n            for (let i = 0; i < data.devices.length; i++) {\r\n                if(data.devices[i].type === 'printer'){\r\n                    _storage.setSettingsCache({activePrinter : data.devices[i].id});\r\n                    break;\r\n                } else {\r\n                    _storage.setSettingsCache({activePrinter : null});\r\n                }\r\n            }\r\n            window.location.reload();\r\n            setAwaitingCache(false);\r\n\r\n        }\r\n    })\r\n\r\n    if(currentUser)\r\n    {\r\n        //Check if catalog cache has already been saved\r\n        if(!_storage.hasCatalogCache() && !awaitingCache)\r\n        {\r\n            return (\r\n                <LoadCache cache={\"catalog\"} fetchCatalog={fetchCatalogCache} />\r\n                // <div className=\"CacheLoadNeeded\" onClick={()=>{fetchCatalogCache(); setAwaitingCache(true);}}>Click to load cache</div>\r\n            );\r\n        }\r\n        if(!_storage.hasDevicesCache() && !awaitingCache)\r\n        {\r\n            return (\r\n                <LoadCache cache={\"devices\"} fetchCatalog={getDevices} />\r\n                // <div className=\"CacheLoadNeeded\" onClick={()=>{getDevices(); setAwaitingCache(true);}}>Click to load Device cache</div>\r\n            );\r\n        }\r\n\r\n        if(awaitingCache)\r\n        {\r\n            return (\r\n                <div className=\"LoadingCache\">Please wait while the catalog cache loads..</div>\r\n            );\r\n        }\r\n\r\n\r\n        //Present Till interface\r\n        return(\r\n            <div id=\"Till\">\r\n                {\r\n                    currentOrder === null ? \r\n                    (\r\n                        <>\r\n                            <CreateOrderPanel/>\r\n                            <ManageOrdersPanel/>\r\n                        </>\r\n                    )\r\n                    : \r\n                    (\r\n                        <OrderEditor orderId={currentOrder}/>\r\n                    )\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    //Show sign on screen\r\n    return (\r\n        <SignOn/>\r\n    )\r\n}\r\n\r\nexport default Till;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\AuthLayer.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\queries.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\toplevel\\SignOn.js",["234","235","236","237"],"import React, {useState} from \"react\";\r\nimport {useLazyQuery, gql} from \"@apollo/client\";\r\nimport * as _storage from \"../../service/storage\";\r\n\r\nimport styles from '../../cssmodules/signon.module.css';\r\n\r\nimport {useUserUpdate} from '../../contexts/UserContext';\r\n\r\nimport {DEVICES_QUERY} from '../../service/queries';\r\n\r\nimport {deleteDevicesCache, setDevicesCache, setSettingsCache} from \"../../service/storage\";\r\n\r\nconst LOGIN_QUERY = gql`\r\nquery AttemptLogin($code: String!){\r\n    attemptTillLogin(logindata:{code:$code})\r\n    {\r\n        result\r\n        jwt,\r\n        user\r\n        {\r\n            id,\r\n            name,\r\n            username,\r\n            email,\r\n            role\r\n            {\r\n                id,\r\n                type\r\n            },\r\n            brands\r\n            {\r\n                id,\r\n                name\r\n            }\r\n        }\r\n    }\r\n}`;\r\nfunction SignOn(props)\r\n{\r\n    \r\n    //Context for Users\r\n    //const currentUser = useCurrentUser();\r\n    const updateUser = useUserUpdate();\r\n\r\n    //State for keypad\r\n    const [currentCode, setCurrentCode] = useState(\"\");\r\n    const [submitForm, setSubmitForm] = useState(false);\r\n    const [showDevOpts, setShowDevOpts] = useState(false);\r\n\r\n    var codeToSubmit = submitForm ? currentCode : \"\";\r\n    \r\n    const [attemptLogin] = useLazyQuery(LOGIN_QUERY, {\r\n        variables: {code:codeToSubmit},\r\n        onCompleted: (data) =>{\r\n            if(data.attemptTillLogin)\r\n            {\r\n                var loginResult = data.attemptTillLogin;\r\n                if(loginResult.result)\r\n                {\r\n                    updateUser({jwt:loginResult.jwt, user: loginResult.user});\r\n                    setSubmitForm(false);\r\n                }\r\n                else\r\n                {\r\n                    setSubmitForm(false);\r\n                    setCurrentCode(\"\");\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    const [getDevices] = useLazyQuery(DEVICES_QUERY, {\r\n        onCompleted: (data) =>{\r\n            _storage.setDevicesCache(data.devices);\r\n            for (let i = 0; i < data.devices.length; i++) {\r\n                if(data.devices[i].type === 'printer'){\r\n                    _storage.setSettingsCache({activePrinter : data.devices[i].id});\r\n                    break;\r\n                } else {\r\n                    _storage.setSettingsCache({activePrinter : null});\r\n                }\r\n            }\r\n            window.location.reload();\r\n        }\r\n    })\r\n    \r\n\r\n    function keyPress(key)\r\n    {\r\n        var val = key.target.dataset.value;\r\n        var newVal = (val === \"-\" ? currentCode.substring(0, currentCode.length - 1) : currentCode + val);\r\n        setCurrentCode(newVal);\r\n    }\r\n\r\n    function handleSubmit(event)\r\n    {\r\n        event.preventDefault();\r\n\r\n        setSubmitForm(true);\r\n        //Live\r\n        attemptLogin();\r\n\r\n        //Send API request / Update state so that we can send API request\r\n        //TESTING  updateUser(1);\r\n    }\r\n\r\n    function changeDevOpts(o)\r\n    {\r\n        setShowDevOpts(o);\r\n    }\r\n\r\n    return(\r\n        <div id=\"SignOn\" className={styles.SignOn}>\r\n            <h4>Enter Your Pin</h4>\r\n            <div className={styles.SignOnCode}>\r\n                <input type=\"password\" className={styles.code} value={currentCode} readOnly/>\r\n            </div>\r\n            <div className={styles.keypadContainer}>\r\n                <div className={styles.keyRow}>\r\n                    <div onClick={keyPress} className={styles.key} data-value=\"1\">1</div>\r\n                    <div onClick={keyPress} className={styles.key} data-value=\"2\">2</div>\r\n                    <div onClick={keyPress} className={styles.key} data-value=\"3\">3</div>\r\n                </div>\r\n                <div className={styles.keyRow}>\r\n                    <div onClick={keyPress} className={styles.key} data-value=\"4\">4</div>\r\n                    <div onClick={keyPress} className={styles.key} data-value=\"5\">5</div>\r\n                    <div onClick={keyPress} className={styles.key} data-value=\"6\">6</div>\r\n                </div>\r\n                <div className={styles.keyRow}>\r\n                    <div onClick={keyPress} className={styles.key} data-value=\"7\">7</div>\r\n                    <div onClick={keyPress} className={styles.key} data-value=\"8\">8</div>\r\n                    <div onClick={keyPress} className={styles.key} data-value=\"9\">9</div>\r\n                </div>\r\n                <div className={styles.keyRow}>\r\n                    <div onClick={keyPress} className={styles.key} data-value=\"-\">C</div>\r\n                    <div onClick={keyPress} className={styles.key} data-value=\"0\">0</div>\r\n                    {\r\n                        props.status == 'refund' ?\r\n                        (\r\n                            <div onClick={() => props.verifypin(currentCode)} className={styles.key}>G</div>\r\n                        )\r\n                        :\r\n                        (\r\n                            <div onClick={handleSubmit} className={styles.key}>G</div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div id=\"DevOptions\" className={\"show-\" + showDevOpts} onClick={()=>{setShowDevOpts(true)}}>\r\n                {\r\n                    showDevOpts ? (\r\n                        <div className=\"DevOptionList\">\r\n                            <ul>\r\n                                <li onClick={()=>{changeDevOpts(false)}}><i className=\"icon-prev\"></i></li>\r\n                                <li onClick={()=>{\r\n                                    if(window.confirm(\"Are you sure you want to wipe device config?\")){\r\n                                        _storage.removeInitialConfig();window.location.reload();\r\n                                    }\r\n                                }}>Clear Device Config</li>\r\n                                <li onClick={()=>{\r\n                                    if(window.confirm(\"Are you sure you want to wipe the catalog cache?\")){\r\n                                        _storage.deleteCatalogCache();window.location.reload();\r\n                                    }\r\n                                }}>Clear Catalog Cache</li>\r\n                                <li onClick={()=>{getDevices()}}>Refresh Device Cache</li>\r\n                                {/*<li onClick={()=>{\r\n                                    _storage.deleteDevicesCache();window.location.reload();\r\n                                }}>Clear Devices Cache</li>*/}\r\n                            </ul>\r\n                        </div>\r\n                    )\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SignOn;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\clientHandler.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\ManageOrdersPanel.js",["238","239","240","241","242"],"import {useUserUpdate} from '../../../contexts/UserContext';\r\n\r\nimport DateTimeClock from \"../ui/DateTimeClock\";\r\nimport React, { useState } from 'react';\r\n\r\nimport {LoadingData} from '../../../components/till/ui/DisplayUtility';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\nimport ManageOrders from \"./ManageOrders\";\r\nimport UserSettings from \"./UserSettings\";\r\n\r\n//Import Tabs\r\nimport Tabs from '../controls/Tabs';\r\nimport NewOrdersTab from '../controls/tabs/NewOrdersTab';\r\nimport CompleteOrdersTab from '../controls/tabs/CompleteOrdersTab';\r\nimport InHouseOrdersTab from '../controls/tabs/InHouseOrdersTab';\r\nimport ProcessingOrdersTab from '../controls/tabs/ProcessingOrdersTab';\r\n\r\n\r\nconst OPEN_ORDERS = gql`\r\n    query {orders(sort: \"created_at:desc\") {\r\n        id,\r\n        ordernumber,\r\n        type,\r\n        status,\r\n        paymentstatus,\r\n        staff_member\r\n        {\r\n            id,\r\n            firstname,\r\n            lastname\r\n        }\r\n        customer{\r\n            firstname,\r\n            lastname\r\n        }\r\n        address{\r\n            id,\r\n            postalcode\r\n        }\r\n        created_at\r\n    }}\r\n`;\r\n\r\nfunction ManageOrdersPanel()\r\n{\r\n\r\n    let setCurrentUser = useUserUpdate();\r\n    let [renderUsersSettings, setrenderUsersSettings] = useState(false);\r\n\r\n    //Fetch all orders\r\n    const { loading, error, data } = useQuery(OPEN_ORDERS,{fetchPolicy: \"cache-and-network\"});\r\n\r\n    if (loading) return LoadingData();\r\n    if (error) return <p>Error :(</p>;\r\n\r\n    function changeUserSettings (){\r\n\r\n        var data = (renderUsersSettings) ? false : true;\r\n        setrenderUsersSettings(data);\r\n\r\n    }\r\n\r\n    function changeprinterSetting(printer_id){\r\n        localStorage.setItem('settingscache',JSON.stringify({activePrinter : printer_id}));\r\n        setrenderUsersSettings(true);\r\n    }\r\n\r\n    return (\r\n\r\n        <section id=\"ManageOrders\" className=\"panel sixty\">\r\n            <header>\r\n                <div className=\"left\">\r\n                    <div className=\"brandLogoPlaceholder\">Cleartwo</div>\r\n                    <DateTimeClock/>\r\n                    <div className=\"loggedUser\">  | James</div>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div style={{marginRight : 10}} onClick={() => {changeUserSettings()}} className=\"btn btn-icon btn-info \"><i className=\"icon-settings\"></i></div>\r\n                    <div onClick={() => {setCurrentUser(null)}} className=\"btn btn-icon btn-danger \"><i className=\"icon-exit\"></i></div>\r\n                </div>\r\n            </header>\r\n            <div className=\"clearfix\"></div>\r\n            {\r\n                renderUsersSettings\r\n                ?\r\n                <UserSettings changeSettings = {changeprinterSetting}/>\r\n                :\r\n                <ManageOrders ordersData ={data} />\r\n            }\r\n\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\nexport default ManageOrdersPanel;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\OrderEditor.js",["243","244","245","246","247","248","249","250","251","252"],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\CreateOrderPanel.js",["253","254","255","256","257","258","259","260"],"import {useState} from 'react';\r\n\r\nimport {gql, useMutation} from '@apollo/client';\r\n\r\nimport CustomerSearchResults from '../controls/CustomerSearchResults';\r\n\r\n//Contexts\r\nimport {useSetCurrentOrder} from '../../../contexts/OrderContext';\r\nimport StaffSearchResults from '../controls/StaffSearchResults';\r\n\r\nimport CustomerForm from '../controls/CustomerForm';\r\nimport AddressForm from '../controls/AddressForm';\r\n\r\nconst BLANK_ORDER = {\r\n    type: null,\r\n    source: 'direct',\r\n    staff_member: null,\r\n    customer : null,\r\n    address: null\r\n};\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n    mutation CreateOrder(\r\n        $type: ENUM_ORDER_TYPE!\r\n        $source: ENUM_ORDER_SOURCE!\r\n        $staff_member: ID,\r\n        $customer: ID,\r\n        $address: ID\r\n    ) {\r\n        createOrder(\r\n            input: {\r\n                data: {\r\n                    type: $type\r\n                    source: $source\r\n                    staff_member: $staff_member\r\n                    customer: $customer\r\n                    address: $address\r\n                }\r\n            }\r\n        )\r\n        {\r\n            order {\r\n                id\r\n                type\r\n                source\r\n                staff_member\r\n                {\r\n                    id,\r\n                    firstname,\r\n                    lastname\r\n                }\r\n                customer {\r\n                    id\r\n                    firstname\r\n                    lastname\r\n                    mobilephone\r\n                }\r\n                address {\r\n                    id\r\n                    name\r\n                    postalcode\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst CREATE_CUSTOMER_MUTATION = gql`\r\n    mutation CreateCustomer(\r\n        $email : String!,\r\n        $firstname : String!,\r\n        $lastname : String!,\r\n        $mobilephone : String!,\r\n        $birthdate: Date!\r\n    ) {\r\n        createCustomer(\r\n            input: {\r\n                data: {\r\n                    emailaddress1: $email,\r\n                    firstname: $firstname,\r\n                    lastname: $lastname,\r\n                    mobilephone: $mobilephone,\r\n                    birthdate: $birthdate\r\n                }\r\n            }\r\n        )\r\n        {\r\n            customer {\r\n                id\r\n                firstname\r\n                lastname\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst CREATE_ADDRESS_MUTATION = gql`\r\n    mutation CreateAddress(\r\n        $name : String!,\r\n        $line1 : String!,\r\n        $line2 : String!,\r\n        $postalcode : String!,\r\n        $city: String!,\r\n        $country: String!,\r\n        $customer_id : ID!\r\n    ) {\r\n        createAddress(\r\n            input: {\r\n            data: {\r\n                name: $name,\r\n                line1: $line1,\r\n                line2: $line2,\r\n                city: $city,\r\n                postalcode: $postalcode,\r\n                county: $country,\r\n                customer: $customer_id\r\n            }\r\n        }\r\n    )\r\n        {\r\n            address\r\n            {\r\n                id             \r\n                line1\r\n                line2\r\n                postalcode\r\n                customer{\r\n                    id,\r\n                    firstname,\r\n                    lastname,\r\n                    mobilephone,\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst UPDATE_CUSTOMER_MUTATION = gql`\r\n\r\n    mutation updatecustomer(\r\n        $id: ID!,\r\n        $fname : String!,\r\n        $lname : String!,\r\n        $phone : String!\r\n    )\r\n    {\r\n        updateCustomer(input:{where:{id:$id},data:{\r\n            firstname : $fname,\r\n            lastname : $lname,\r\n            mobilephone : $phone\r\n        }})\r\n        {\r\n            customer{id}\r\n        }\r\n    }\r\n\r\n`;\r\nconst UPDATE_ADDRESS_MUTATION = gql`\r\n\r\n    mutation updateaddress(\r\n        $id: ID!,\r\n        $name : String!,\r\n        $line1 : String!,\r\n        $line2 : String!\r\n        $postalcode: String!,\r\n        $city : String!,\r\n        $country : String!\r\n    )\r\n    {\r\n        updateAddress(input:{where:{id:$id},data:{\r\n            name : $name,\r\n            line1 : $line1,\r\n            line2 : $line2,\r\n            postalcode : $postalcode,\r\n            city : $city,\r\n            county : $country\r\n        }})\r\n        {\r\n            address{id}\r\n        }\r\n    }\r\n\r\n`;\r\nvar customer_id = \"\";\r\nvar changedtype = \"\";\r\nfunction CreateOrderPanel(props)\r\n{\r\n    const [newOrder,updateNewOrder] = useState(BLANK_ORDER);\r\n    const [showSection,changeShowSection] = useState('type');\r\n    const [currentCustomerSearch, setCurrentCustomerSearch] = useState('');\r\n\r\n    const [createNewOrder, { loading: mutationLoading, error: mutationError }] = useMutation(CREATE_ORDER_MUTATION, {\r\n        onCompleted(data){\r\n            openOrder(data);\r\n        }\r\n    });\r\n\r\n    const [CreateCustomer, { loading: customermutationLoading, error: CustomermutationError }] = useMutation(CREATE_CUSTOMER_MUTATION, {\r\n        onCompleted(data){\r\n            CreatedCustomerSelected(data);\r\n        }\r\n    });\r\n\r\n    const [CreateAddress, { loading: addressmutationLoading, error: addressmutationError }] = useMutation(CREATE_ADDRESS_MUTATION, {\r\n        onCompleted(data){\r\n            CreatedAddressSelected(data);\r\n        }\r\n    });\r\n    const [UpdateCustomer, { loading: updatecustomermutationLoading, error: updatecustomermutationError }] = useMutation(UPDATE_CUSTOMER_MUTATION, {\r\n        onCompleted(data){\r\n            changeShowSection('customer');\r\n        }\r\n    });\r\n    const [UpdateAddress, { loading: updateaddressmutationLoading, error: updateaddressmutationError }] = useMutation(UPDATE_ADDRESS_MUTATION, {\r\n        onCompleted(data){\r\n            changeShowSection('customer');\r\n        }\r\n    });\r\n\r\n\r\n\r\n    //Use our custom hook to enable us to set the current order after creating or opening one\r\n    var setCurrentOrder = useSetCurrentOrder();\r\n\r\n    //IF the current type is walkin or eatin, create the order now\r\n    /*useEffect(() => {\r\n        if( (newOrder.type === \"eatin\" || newOrder.type === \"walkin\") && !mutationLoading )\r\n        {\r\n            createOrder();\r\n        }\r\n    }, [newOrder.type]);*/\r\n    \r\n\r\n    \r\n\r\n    //Check if currently creating new order\r\n    if(mutationLoading)\r\n    {\r\n        return (\r\n            <div className=\"loader\">\r\n                <div className=\"spinner\"></div>\r\n                <div className=\"message\">Creating Order..</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(mutationError)\r\n    {\r\n        return (\r\n            <div className=\"Error\">Error Creating the order..</div>\r\n        );\r\n    }\r\n\r\n\r\n    \r\n\r\n    function getTypeOptionClasses(myID)\r\n    {\r\n        return \"coOption \" + myID + (myID === newOrder.type ? \" selected\" : \"\");\r\n    }\r\n\r\n    /*Events*/\r\n    function typeChanged(event)\r\n    {\r\n        var val = event.target.dataset.value;\r\n        var nOrder = newOrder;\r\n        nOrder.type = val;\r\n        updateNewOrder(nOrder);\r\n        changedtype = val;\r\n        if(val !== 'staff')\r\n        {\r\n            changeShowSection('customer');\r\n        }\r\n        else\r\n        {\r\n            changeShowSection('staff');\r\n        }\r\n    }\r\n\r\n    function searchChanged(event)\r\n    {\r\n        var val = event.target.value;\r\n        setCurrentCustomerSearch(val);\r\n    }\r\n\r\n    function CreatedAddressSelected(data){\r\n\r\n        var nOrder = newOrder;\r\n        nOrder.customer = data.createAddress.address.customer.id;\r\n        nOrder.address = data.createAddress.address.id;\r\n        nOrder.customerData = data.createAddress.address.customer;\r\n        nOrder.addressData = data.createAddress.address;\r\n        updateNewOrder(nOrder);\r\n        changeShowSection('summary');\r\n\r\n    }\r\n\r\n    function addressSelected(event)\r\n    {\r\n        var val = JSON.parse(event.target.dataset.value);\r\n        var cust = JSON.parse(event.target.dataset.customer);\r\n        console.log(cust);\r\n        var nOrder = newOrder;\r\n        nOrder.customer = cust.id;\r\n        nOrder.address = val.id;\r\n        nOrder.customerData = cust;\r\n        nOrder.addressData = val;\r\n        updateNewOrder(nOrder);\r\n        changeShowSection('summary');\r\n    }\r\n\r\n    function CreatedCustomerSelected(data){\r\n\r\n        if(changedtype === 'collection'){\r\n            var nOrder = newOrder;\r\n            nOrder.customer = data.createCustomer.customer.id;\r\n            nOrder.customerData = data.createCustomer.customer;\r\n            updateNewOrder(nOrder);\r\n            changeShowSection('summary');\r\n        } else{\r\n            changeShowSection('addressform');\r\n        }\r\n    }\r\n\r\n    function customerSelected(event)\r\n    {\r\n        var val = JSON.parse(event.target.dataset.customer);\r\n        var nOrder = newOrder;\r\n        nOrder.customer = val.id;\r\n        nOrder.customerData = val;\r\n        updateNewOrder(nOrder);\r\n        changeShowSection('summary');\r\n    }\r\n\r\n    function staffMemberSelected(event)\r\n    {\r\n        var val = JSON.parse(event.target.dataset.staffmember);\r\n        var nOrder = newOrder;\r\n        nOrder.staff_member = val.id;\r\n        nOrder.staffData = val;\r\n        updateNewOrder(nOrder);\r\n        changeShowSection('summary');\r\n    }\r\n\r\n    function updateCustomer(event , cust_id)\r\n    {\r\n        event.preventDefault();\r\n        UpdateCustomer({variables:{id:cust_id , fname : event.target.firstname.value , lname:event.target.lastname.value , phone:event.target.mobilephone.value}});\r\n    }\r\n\r\n    function updateAddress(event , address_id)\r\n    {\r\n        event.preventDefault();\r\n        UpdateAddress({variables:{id:address_id , name : event.target.name.value , line1:event.target.line1.value , line2:event.target.line2.value , postalcode: event.target.postalcode.value, city:event.target.city.value , country:event.target.county.value}});\r\n    }\r\n\r\n    function createOrder(nOrder)\r\n    {\r\n        var theOrder = {...nOrder};\r\n        delete theOrder.customerData;\r\n        delete theOrder.staffData;\r\n        delete theOrder.addressData;\r\n        console.log(\"order query check : \");\r\n        console.log(theOrder);\r\n        createNewOrder({variables:theOrder});\r\n    }\r\n\r\n    function createEatinWalkinOrder(type)\r\n    {\r\n        var no={...BLANK_ORDER}; \r\n        no.type=type;\r\n        createOrder(no);\r\n    }\r\n\r\n    function openOrder(data)\r\n    {\r\n        console.log(\"Opening Order:\");\r\n        console.log(data);\r\n        setCurrentOrder(data.createOrder.order.id)\r\n    }\r\n\r\n\r\n    /*Section Renderers*/\r\n    function renderCreatOrderNavigation()\r\n    {\r\n        return(\r\n            <>\r\n                <header className=\"withNav\">\r\n                    {showSection === 'customerform' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('customer')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'addressform' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('customer')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'customer' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('type')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'staff' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('type')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'summary' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('customer')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'editCustomer' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('summary')}><i className=\"icon-prev\"></i></div> : null}\r\n                    {showSection === 'editAddress' ? <div className=\"navbtn prev\" onClick={() => changeShowSection('summary')}><i className=\"icon-prev\"></i></div> : null}\r\n                    <h4>Create Order</h4>\r\n                    {showSection === 'type' && newOrder.type != null ? <div className=\"navbtn next\" onClick={() => changeShowSection('customer')}><i className=\"icon-next\"></i></div> : null}\r\n                    {showSection === 'customer' && newOrder.customer != null ? <div className=\"navbtn next\" onClick={() => changeShowSection('summary')}><i className=\"icon-next\"></i></div> : null}\r\n                </header>\r\n                <div className=\"clearfix\"></div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    function renderTypeSection()\r\n    {\r\n        return (\r\n            <div className=\"section delivery_type\">\r\n                {/*<h4 className=\"center\">Order Type</h4>*/}\r\n                <div className=\"coSelector\">\r\n                    <div className={getTypeOptionClasses('walkin')} data-value=\"walkin\" onClick={()=>{createEatinWalkinOrder(\"walkin\")}}>Walk In</div>\r\n                    <div className={getTypeOptionClasses('eatin')} data-value=\"eatin\" onClick={()=>{createEatinWalkinOrder(\"eatin\")}}>Eat In</div>\r\n                    <div className={getTypeOptionClasses('collection')} data-value=\"collection\" onClick={typeChanged}>Collection</div>\r\n                    <div className={getTypeOptionClasses('delivery')} data-value=\"delivery\" onClick={typeChanged}>Delivery</div>\r\n                    <div className={getTypeOptionClasses('staff')} data-value=\"staff\" onClick={typeChanged}>Staff</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function ShowCustomerForm(){\r\n        changeShowSection('customerform');\r\n    }\r\n\r\n    function CreateCustomerForm(data){\r\n\r\n        CreateCustomer({variables:{email:data.email , firstname:data.fname , lastname:data.lname , birthdate:data.date , mobilephone:data.phone}});\r\n\r\n    }\r\n\r\n    function renderCustomerSearch()\r\n    {\r\n        if(newOrder.source === 'staff') return null;\r\n\r\n        var updateFunctionToCall = newOrder.type === 'collection' ? customerSelected : addressSelected;\r\n        return (\r\n            <div className=\"customerSearch\">\r\n                <h4 className=\"center\">Customer</h4>\r\n                <div>\r\n                    <button style={{width : \"25%\"}} className=\"btn btn-success btn-sm f_right\" onClick={() => ShowCustomerForm()}>Add New</button>\r\n                    <input type=\"number\" pattern=\"\\d*\" className=\"search__customers\" style={{width : \"70%\"}} placeholder=\"Search Customers By Number\" value={currentCustomerSearch} onChange={searchChanged}/>\r\n                </div>\r\n                {\r\n                    currentCustomerSearch !== \"\" ? \r\n                        <CustomerSearchResults\r\n                            search={currentCustomerSearch}\r\n                            updateFunction={updateFunctionToCall}\r\n                            customerOnly={newOrder.type === 'collection'}\r\n                            AddressForm={ShowAddressForm}\r\n                            Tab ={changedtype}\r\n                        />\r\n                    : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function renderStaffList()\r\n    {\r\n        return(\r\n            <div className=\"staffSearch\">\r\n                <h4 className=\"center\">Staff Member</h4>\r\n                {\r\n                    <StaffSearchResults updateFunction={staffMemberSelected}/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function renderSummarySection()\r\n    {\r\n        return(\r\n            <div className=\"section summary\">\r\n                {\r\n                    newOrder.type === 'staff' ?\r\n                    (\r\n                        <div className=\"customerCard\">\r\n                            <div className=\"customerIcon\"><i className=\"icon-person\"></i></div>\r\n                            <div className=\"content\">\r\n                                <div className=\"name\">{newOrder.staffData.firstname} {newOrder.staffData.lastname}</div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    :\r\n                    (\r\n                        <div className=\"customerCard\">\r\n                            <div className=\"customerIcon\"><i className=\"icon-person\"></i></div>\r\n                            <div className=\"content\">\r\n                                <div className=\"name\">{newOrder.customerData.firstname} {newOrder.customerData.lastname}</div>\r\n                                <div className=\"sub\">{newOrder.customerData.mobilephone}</div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n                <hr className=\"fifty\"/>\r\n                {\r\n                    newOrder.addressData && newOrder.type === \"delivery\" ? \r\n                    (\r\n                        <>\r\n                            <div className=\"addressCard\">\r\n                                <div className=\"addressIcon\"><i className=\"icon-location\"></i></div>\r\n                                <div className=\"content\">\r\n                                    Delivering to {newOrder.addressData.name} address at {newOrder.addressData.postalcode}\r\n                                </div>\r\n                            </div>\r\n                            <hr/>\r\n                        </>\r\n                    )\r\n                    : \r\n                    newOrder.type === 'collection' ? \r\n                    (\r\n                        <>\r\n                        <div className=\"addressCard\">\r\n                            <div className=\"addressIcon\"><i className=\"icon-eatin\"></i></div>\r\n                                <div className=\"content\">\r\n                                    Collection from store\r\n                                </div>\r\n                            </div>\r\n                            <hr/>\r\n                        </>\r\n                    ) \r\n                    : \r\n                    null\r\n                }\r\n                <div className=\"buttonBar\">\r\n                    {\r\n                        newOrder.type !== \"staff\" ? \r\n                        (\r\n                            <div className=\"btn btn-info\" onClick={() => {changeShowSection('editCustomer');} }>Edit Customer</div>\r\n                        )\r\n                        :\r\n                        null\r\n                    }\r\n                    {newOrder.addressData ? <div className=\"btn btn-info\" onClick={() => {changeShowSection('editAddress');} }>Edit Address</div> : null}\r\n                    <div className=\"btn btn-success\" onClick={()=>{createOrder(newOrder)}}>Create Order</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function renderCustomerEditSection()\r\n    {\r\n        return(\r\n            <div className=\"section editCustomer\">\r\n                <form onSubmit={(event) => updateCustomer(event , newOrder.customerData.id)}>\r\n                    <div class=\"group\">\r\n                        <label>First Name*</label>\r\n                        <input type=\"text\" name=\"firstname\" autoComplete=\"off\" defaultValue={newOrder.customerData.firstname}  required />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" name=\"lastname\" autoComplete=\"off\" defaultValue={newOrder.customerData.lastname}  />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>Telephone*</label>\r\n                        <input type=\"text\" name=\"mobilephone\" autoComplete=\"off\" defaultValue={newOrder.customerData.mobilephone} required />\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <input style={{width : 100}} type=\"submit\" value=\"Submit\" className=\"btn btn-success f_right\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function renderAddressEditSection()\r\n    {\r\n        return(\r\n            <div className=\"section editAddress\">\r\n                <form onSubmit={(event) => updateAddress(event , newOrder.addressData.id)}>\r\n                    <div class=\"group\">\r\n                        <label>Name*</label>\r\n                        <input type=\"text\" name=\"name\" autoComplete=\"off\" defaultValue={newOrder.addressData.name} required />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>Line 1*</label>\r\n                        <input type=\"text\" name=\"line1\" autoComplete=\"off\" defaultValue={newOrder.addressData.line1} required />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>Line 2</label>\r\n                        <input type=\"text\" name=\"line2\" autoComplete=\"off\" defaultValue={newOrder.addressData.line2}  />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>City*</label>\r\n                        <input type=\"text\" name=\"city\" autoComplete=\"off\" defaultValue={newOrder.addressData.city} required />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>County</label>\r\n                        <input type=\"text\" name=\"county\" autoComplete=\"off\" defaultValue={newOrder.addressData.city} />\r\n                    </div>\r\n                    <div class=\"group\">\r\n                        <label>Postcode*</label>\r\n                        <input type=\"text\" name=\"postalcode\" autoComplete=\"off\" defaultValue={newOrder.addressData.postalcode} required />\r\n                    </div>\r\n                    <input style={{width : 100}} type=\"submit\" value=\"Submit\" className=\"btn btn-success f_right\"/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    function ShowAddressForm(cust_id){\r\n        customer_id = cust_id;\r\n        changeShowSection('addressform');\r\n    }\r\n\r\n    function renderAddressForm(){\r\n        return (\r\n\r\n            <div className=\"customerSearch\">\r\n                <h4 className=\"center\">Create New Address</h4>\r\n                {\r\n                    // <CustomersResults updateFunction={staffMemberSelected}/>\r\n                    <AddressForm CustomerForm={ShowCustomerForm} form_submit = {CreateAddressForm}/>\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    function CreateAddressForm(data){\r\n        CreateAddress({variables:{name:data.name , line1:data.line1 , line2:data.line2 , postalcode:data.postalcode , city:data.city , country:data.country, customer_id:customer_id}});\r\n    }\r\n\r\n    function renderCustomerForm(){\r\n        return (\r\n\r\n            <div className=\"customerSearch\">\r\n                <h4 className=\"center\">Create New Customer</h4>\r\n                {\r\n                    // <CustomersResults updateFunction={staffMemberSelected}/>\r\n                    <CustomerForm CustomerForm={ShowCustomerForm} form_submit = {CreateCustomerForm}/>\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n    return (\r\n        <section id=\"CreateOrder\" className=\"panel forty\">\r\n            {renderCreatOrderNavigation()}\r\n            {showSection === 'type' ? renderTypeSection() : null}\r\n            {showSection === 'customer' ? renderCustomerSearch() : null}\r\n            {showSection === 'staff' ? renderStaffList() : null}\r\n            {showSection === 'summary' ? renderSummarySection() : null}\r\n            {showSection === 'editCustomer' ? renderCustomerEditSection() : null}\r\n            {showSection === 'editAddress' ? renderAddressEditSection() : null}\r\n            {showSection === 'customerform' ? renderCustomerForm() : null}\r\n            {showSection === 'addressform' ? renderAddressForm() : null}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CreateOrderPanel;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DisplayUtility.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DateTimeClock.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\Tabs.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomerSearchResults.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\StaffSearchResults.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\CompleteOrdersTab.js",["261"],"import {useState} from 'react';\r\nimport OrderListItem from '../../ui/OrderListItem';\r\nimport {NoDataToDisplay} from '../../ui/DisplayUtility';\r\n\r\nfunction CompleteOrdersTab(props)\r\n{\r\n    const [subTab,setSubtab] = useState(\"complete\");\r\n\r\n    function getContents()\r\n    {\r\n        var toDisplay = props.orders.filter((order) => {\r\n            if(subTab === \"complete\" && (order.status === \"fulfilled\" || order.status === \"delivered\" || order.status === \"collected\"))\r\n            {return order;}\r\n            if(subTab === \"failed\" && (order.status === \"couldnotdeliver\" || order.status === \"didnotcollect\" || order.status === \"cancelled\" || order.status === \"rejected\" ))\r\n            {return order;}\r\n        });\r\n\r\n        if(toDisplay.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n\r\n        return toDisplay.map((o) => {return getOrderJSX(o)});\r\n    }\r\n\r\n    function getOrderJSX(order)\r\n    {\r\n        return <OrderListItem key={order.id} order={order}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"subTabsContainer\">\r\n                <div className={\"subTab\"+ (subTab === \"complete\" ? \" selected\" : \"\")} onClick={()=>{setSubtab(\"complete\")}}>Complete</div>\r\n                <div className={\"subTab\" + (subTab === \"failed\" ? \" selected\" : \"\")} onClick={()=>{setSubtab(\"failed\")}}>Failed</div>\r\n            </div>\r\n            <div className=\"subTabWindow\">\r\n                {getContents()}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CompleteOrdersTab;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\InHouseOrdersTab.js",["262"],"import {useState} from 'react';\r\nimport OrderListItem from '../../ui/OrderListItem';\r\nimport {NoDataToDisplay} from '../../ui/DisplayUtility';\r\n\r\nfunction InHouseOrdersTab(props)\r\n{\r\n    const [subTab,setSubtab] = useState(\"open\");\r\n\r\n    function getContents()\r\n    {\r\n        var toDisplay = props.orders.filter((order) => {\r\n            if(order.type === \"eatin\" && subTab === \"paid\" && order.paymentstatus === \"paid\"){return order;}\r\n            if(order.type === \"eatin\" && subTab === \"open\" && order.paymentstatus !== \"paid\"){return order;}\r\n        });\r\n\r\n        if(toDisplay.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n\r\n        return toDisplay.map((o) => {return getOrderJSX(o)});\r\n    }\r\n\r\n    function getOrderJSX(order)\r\n    {\r\n        return <OrderListItem key={order.id} order={order}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"subTabsContainer\">\r\n                <div className={\"subTab\"+ (subTab === \"open\" ? \" selected\" : \"\")} onClick={()=>{setSubtab(\"open\")}}>Open</div>\r\n                <div className={\"subTab\" + (subTab === \"paid\" ? \" selected\" : \"\")} onClick={()=>{setSubtab(\"paid\")}}>Paid</div>\r\n            </div>\r\n            <div className=\"subTabWindow\">\r\n                {getContents()}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InHouseOrdersTab;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\ProcessingOrdersTab.js",["263"],"import OrderListItem from '../../ui/OrderListItem';\r\nimport {NoDataToDisplay} from '../../ui/DisplayUtility';\r\n\r\nfunction ProcessingOrdersTab(props)\r\n{\r\n    function getContents()\r\n    {\r\n        if(props.orders.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n        \r\n        var toDisplay = props.orders.filter((order) => {\r\n            if(order.status === \"inkitchen\" || order.status === \"outfordelivery\" || order.status === \"awaitingcollection\"){return order;}\r\n        });\r\n\r\n        if(toDisplay.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n\r\n        return toDisplay.map((o) => {return <OrderListItem key={o.id} order={o}/>});\r\n    }\r\n\r\n    return getContents();\r\n}\r\n\r\nexport default ProcessingOrdersTab;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\CategorySelector.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\ProductEditor.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\ProductSelector.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\GroupProductSelector.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\tabs\\NewOrdersTab.js",["264"],"//import {useState} from 'react';\r\n//import { useSetCurrentOrder } from '../../../../contexts/OrderContext';\r\n\r\n//Utility\r\n//import {DateTimeToHumanTime} from \"../../ui/DateTimeUtils\";\r\nimport {NoDataToDisplay} from '../../ui/DisplayUtility';\r\nimport OrderListItem from '../../ui/OrderListItem';\r\n\r\n//import { useQuery, gql } from '@apollo/client';\r\n\r\n\r\n\r\n\r\nfunction NewOrdersTab(props)\r\n{\r\n    \r\n\r\n    //const [orders,setOrders] = useState(null);\r\n\r\n    //Use Set Current Order\r\n    //const setCurrentOrder = useSetCurrentOrder();\r\n\r\n    //if (loading) return LoadingData();\r\n    //if (error) return <p>Error :(</p>;\r\n\r\n    \r\n    \r\n\r\n    /*function getOrderName(order)\r\n    {\r\n        var t = order.type\r\n        if(t === \"eatin\" || t === \"walkin\")\r\n        {\r\n            return(<>ANON - {order.type.toUpperCase()}</>);\r\n        }\r\n        else if(t === \"staff\")\r\n        {\r\n            return (<>{order.staff_member.firstname} {order.staff_member.lastname}</> );\r\n        }\r\n        else\r\n        {\r\n            return (<>{order.customer.firstname} {order.customer.lastname}</> );\r\n        }\r\n    }*/\r\n\r\n\r\n    //console.log(data);\r\n    /*return props.orders.map((order) => (\r\n        <div className=\"miniOrder\" key={order.id} data-id={order.id} onClick={() => {setCurrentOrder(order.id)}}>\r\n            <div className=\"brandArea\">\r\n                <div className=\"brandLogoPlaceholder\">B</div>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"details\">\r\n                    {getOrderName(order)} {order.type === \"delivery\" ? (\"(\" + order.address.postalcode + \")\") : null}\r\n                </div>\r\n                <div className=\"subDetails\">\r\n                    #{order.ordernumber} | {order.type.charAt(0).toUpperCase() + order.type.slice(1)} | Placed: {DateTimeToHumanTime(order.created_at)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ));*/\r\n\r\n    function getContents()\r\n    {\r\n        if(props.orders.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n\r\n        var toDisplay = props.orders.filter((order) => {\r\n            if(order.status === \"new\"){return order;}\r\n        });\r\n\r\n        if(toDisplay.length === 0)\r\n        {\r\n            return NoDataToDisplay(\"No Orders to Display\")\r\n        }\r\n\r\n        return toDisplay.map((o) => {return <OrderListItem key={o.id} order={o}/>});\r\n    }\r\n\r\n    return getContents();\r\n\r\n}\r\n\r\nexport default NewOrdersTab;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderReceipt.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\OrderSettings.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\payorder\\Payment.js",["265","266","267","268","269","270","271","272","273","274"],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\OrderListItem.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\CurrentOrderHeader.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderItems.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\printer.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\orderreceipt\\OrderActions.js",["275","276"],"import {useSetCurrentOrder} from '../../../../../contexts/OrderContext'\r\nimport * as _editUtils from '../../.././../../service/itemEditUtils';\r\n\r\nexport default function OrderActions(props)\r\n{\r\n    const setCurrentOrder = useSetCurrentOrder();\r\n\r\n    //const showOrderBtn = props.currentOrder.status !== \"paid\";\r\n    const showPayBtn = props.currentOrder.paymentstatus == \"notpaid\";\r\n    const showRefundBtn = props.currentOrder.paymentstatus === \"paid\";\r\n    const showVoidBtn = props.currentOrder.paymentstatus == \"notpaid\";\r\n\r\n    return (\r\n        <div id=\"OrderActions\">\r\n            <div className=\"grandTotal\">\r\n                <div style={{textAlign:\"left\"}}>\r\n                    Total:\r\n                    <span>£{_editUtils.calculateOrderTotal(props.currentOrder.line_items).toFixed(2)}</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"subActions\">\r\n                \r\n            </div>\r\n            <div className=\"buttonBar joined\">\r\n\r\n                {/*<div className=\"btn btn-lg\">Discount</div>\r\n                <div className=\"btn btn-lg\">Print</div>*/}\r\n                {/*showOrderBtn ? (<div className=\"btn btn-lg disabled\">Order</div>) : null*/}\r\n                {showVoidBtn ? (<div className=\"btn btn-lg btn-danger\" onClick={()=>{setCurrentOrder(null);}}><i className=\"icon-trash\"></i>Void</div>) : null}\r\n                <div className=\"btn btn-lg btn-info\" onClick={()=>{setCurrentOrder(null);}}><i className=\"icon-confirm\"></i>Hold</div>\r\n                {showPayBtn ? (<div className=\"btn btn-lg btn-success\" onClick={()=>{props.setOrderPaymentOpen()}}><i className=\"icon-tick\"></i>Pay</div>) : null}\r\n                {showRefundBtn ? (<div className=\"btn btn-lg btn-danger\" onClick={()=>{props.setOrderRefundOpen()}}>Refund</div>) : null}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\OptionsTab.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\service\\itemEditUtils.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\ExtrasTab.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\addorderitems\\tabs\\AllergensTab.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\tabs\\NotesTab.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\tabs\\GeneralTab.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\ui\\DateTimeUtils.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomerForm.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\AddressForm.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\CustomersResults.js",["277"],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\controls\\AddressesResults.js",["278"],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\ManageOrders.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\UserSettings.js",["279","280"],"import * as _storage from \"../../../service/storage\";\r\nimport styles from \"../../../Setup.module.css\";\r\n\r\nfunction UserSettings(props)\r\n{\r\n\r\n    function changeprintingdevice(event){\r\n        event = event ||  window.event;\r\n        props.changeSettings(event.target.value);\r\n    }\r\n\r\n    var devices_data = JSON.parse(localStorage.getItem('deviceCache'));\r\n    var activePrinter = JSON.parse(localStorage.getItem('settingscache')).activePrinter;\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <h4>Select Printer</h4>\r\n            <div className=\"formGroup\">\r\n                <select className={styles.formcontrol_select} onChange={() => {changeprintingdevice(this)}} defaultValue={activePrinter}>\r\n                    {\r\n                        devices_data.map((device) => {\r\n                            if(device.type === 'printer'){\r\n                                return (\r\n                                    <option value={device.id} key={device.id}>{device.name}</option>\r\n                                );\r\n                            }\r\n                        })\r\n                    }\r\n                </select>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default UserSettings;","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\panels\\cache\\LoadCache.js",["281"],"import styles from \"../../../../Setup.module.css\";\r\n\r\nexport default function LoadCache(props){\r\n    return (\r\n        <div  className={styles.Setup} style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n            <div style={{width : '30%' , backgroundColor : 'white' , border : \"1px solid white\"}}>\r\n                <div style={{display: 'flex', alignItems:'center' , backgroundColor : \"#172345\"}}>\r\n                    <h4 style={{marginLeft : 10 , marginTop : 10 , color : 'white'}}>\r\n                        {(props.cache == \"catalog\") ? \"Load Catalog Cache\" : \"Load Devices Cache\"}\r\n                    </h4>\r\n                </div>\r\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center' , color : '#172345'}}>\r\n                    <button className=\"btn btn-primary\" style={{backgroundColor : \"#172345\" , color : \"white\" , marginTop : 40 , marginBottom : 40}} onClick={() => props.fetchCatalog()}>Load Cache</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\payorder\\RefundByCash.js",["282","283","284","285","286","287","288"],"import {useState} from 'react';\r\nimport styles from \"../../../../../Setup.module.css\";\r\n\r\nvar refundedReason = \"\";\r\nexport default function RefundByCash(props)\r\n{\r\n    console.log(props.orderData);\r\n    //TEMP\r\n    const discountedAmount = (props.orderData.discount == null) ? 0 : props.orderData.discount;\r\n\r\n\r\n    const [typedPrefix,updateTypedPrefix] = useState(\"Enter Refund Amount: \");\r\n    const [typed,updateTyped] = useState(\"\");\r\n    const [Applied,setApplied] = useState(true);\r\n    const [RefundChange , setRefundChange] = useState(true);\r\n\r\n    const [discountMethod,setDiscountMethod] = useState(\"£\");\r\n    const [displayRefundAmount,setDisplayRefundAmount] = useState(props.orderData.refundedamount);\r\n\r\n    //const [discountMode,setDiscountMode] = useState(false);\r\n    const [discountedTotal,setDiscountedTotal] = useState(props.orderData.total);\r\n\r\n    const [showRefundReason,setShowRefundReason] = useState(false);\r\n\r\n    function calculateRefundAmount()\r\n    {\r\n        var refundAmount = 0;\r\n        var toRefundFrom = props.orderData.subtotal - discountedAmount;\r\n\r\n        if(discountMethod === \"%\")\r\n        {\r\n            var p = typed;\r\n            refundAmount = (toRefundFrom / 100) * p;\r\n        }\r\n        else\r\n        {\r\n            refundAmount = parseFloat(typed);\r\n        }\r\n\r\n        if(refundAmount > toRefundFrom){\r\n            refundAmount = toRefundFrom;\r\n            setShowRefundReason(true);\r\n        }\r\n\r\n        setDisplayRefundAmount(refundAmount);\r\n        setApplied(false);\r\n    }\r\n\r\n    function keyPressed(event)\r\n    {\r\n        var val = event.target.dataset.val;\r\n        setApplied(true);\r\n        switch(val)\r\n        {\r\n            case \"APPLY\":\r\n                calculateRefundAmount();\r\n                break\r\n            case \"FULLREFUND\" :\r\n                setShowRefundReason(true);\r\n                setRefundChange(false);\r\n                updateTyped(props.orderData.total);\r\n                break;\r\n            case \"CE\" :\r\n                updateTyped(\"\");\r\n                break;\r\n            case \"%\":\r\n                setDiscountMethod(\"%\");\r\n                break;\r\n            case \"£\":\r\n                setDiscountMethod(\"£\");\r\n                break;\r\n            case \"percent_5\" :\r\n                setRefundChange(false);\r\n                updateTyped(\"5%\");\r\n                break;\r\n            case \"percent_10\" :\r\n                setRefundChange(false);\r\n                updateTyped(\"10%\");\r\n                break;\r\n            case \"percent_15\" :\r\n                setRefundChange(false);\r\n                updateTyped(\"15%\");\r\n                break;\r\n            case \"percent_20\" :\r\n                setRefundChange(false);\r\n                updateTyped(\"20%\");\r\n                break;\r\n            default:\r\n                setRefundChange(false);\r\n                var nval = typed + val;\r\n                updateTyped(nval);\r\n                break;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function processRefund(){\r\n        var data = {};\r\n        var reason = null;\r\n        if(showRefundReason || props.orderData.total == displayRefundAmount){\r\n            if(refundedReason == \"\"){\r\n                alert('Select Refund Reason');\r\n                return;\r\n            }\r\n            reason = refundedReason;\r\n        }\r\n        var status;\r\n        if(props.orderData.total > displayRefundAmount){\r\n            status = \"fulfilled\";\r\n        } else if(props.orderData.total == displayRefundAmount){\r\n            status = \"cancelled\";\r\n        }\r\n        var data = {\r\n            'refundamount' : displayRefundAmount,\r\n            'refundreason' : reason,\r\n            'payment_status' : \"refunded\",\r\n            'status' : status\r\n        };\r\n        props.updateOrderrefund(data);\r\n    }\r\n\r\n    function changedReason(e){\r\n        e = e || window.event;\r\n        refundedReason = e.target.value;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"orderPaymentWrapper\">\r\n                <div id=\"OrderPaymentReadout\">\r\n\r\n                    <div className=\"due\" style={{marginBottom : 10}}><b>ORDER TOTAL:</b> £{props.orderData.subtotal}</div>\r\n                    <div className=\"due\" style={{marginBottom : 10}}><b>DISCOUNT:</b> £{discountedAmount}</div>\r\n                    {displayRefundAmount ? (<div className=\"refundAmount\" style={{marginBottom : 10}}>Total to Refund: £{displayRefundAmount.toFixed(2)}</div>) : null}\r\n                    {\r\n                        showRefundReason ?\r\n                        (\r\n                            <div style={{marginBottom : 10}}>\r\n                                <label>Refund Reason</label>\r\n                                <select className={styles.formcontrol_select} onChange={() => changedReason(this)}>\r\n                                    <option value={\"\"}>Choose Reason</option>\r\n                                    <option value={\"customer_cancelled\"}>customer_cancelled</option>\r\n                                    <option value={\"customer_complaint\"}>customer_complaint</option>\r\n                                    <option value={\"store_cancelled\"}>store_cancelled</option>\r\n                                </select>\r\n                            </div>\r\n                        )\r\n                        :\r\n                        (\r\n                            null\r\n                        )\r\n                    }\r\n                    <div className=\"typeBar\">{typedPrefix + discountMethod + typed}</div>\r\n                </div>\r\n                <div id=\"OrderPaymentControls\">\r\n                    <div className=\"keypad\">\r\n                        <div className=\"key\"></div>\r\n                        <div className=\"key\"></div>\r\n                        <div className=\"key\"></div>\r\n                        <div className=\"key special\" onClick={keyPressed} data-val={discountMethod === \"£\" ? \"%\" : \"£\"}>{discountMethod === \"£\" ? \"%\" : \"£\"}</div>\r\n                        <div className=\"key\"></div>\r\n\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"7\">7</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"8\">8</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"9\">9</div>\r\n                        <div className=\"key special\" onClick={keyPressed} data-val=\"percent_5\">5%</div>\r\n                        <div className=\"key action\" onClick={keyPressed} data-val=\"APPLY\" style={{\r\n                            opacity: RefundChange ? 0.50 : 1,\r\n                            pointerEvents: RefundChange ? \"none\" : \"initial\"\r\n                        }}>APPLY</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"4\">4</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"5\">5</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"6\">6</div>\r\n                        <div className=\"key special\" onClick={keyPressed} data-val=\"percent_10\">10%</div>\r\n                        <div className=\"key action\" onClick={keyPressed} data-val=\"FULLREFUND\">FULLREFUND</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"1\">1</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"2\">2</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"3\">3</div>\r\n                        <div className=\"key special\" onClick={keyPressed} data-val=\"percent_15\">15%</div>\r\n                        <div className=\"key danger\" onClick={() => {props.cancel(false)}}>CANCEL</div>\r\n                        <div className=\"key function\" style={{fontSize: \"2em\",lineHeight: \"1.5em\"}} onClick={keyPressed} data-val=\".\">.</div>\r\n                        <div className=\"key numeric\" onClick={keyPressed} data-val=\"0\">0</div>\r\n                        <div className=\"key function\" onClick={keyPressed} data-val=\"CE\">CE</div>\r\n                        <div className=\"key special\" onClick={keyPressed} data-val=\"percent_20\">20%</div>\r\n                        <div className=\"key success\" style={{\r\n                            opacity: Applied ? 0.50 : 1,\r\n                            pointerEvents: Applied ? \"none\" : \"initial\"\r\n                        }} onClick={() => {processRefund()}}>DONE</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\payorder\\PaymentMethod.js",[],"C:\\Users\\nas\\projects\\ClearEPOS-till\\src\\components\\till\\screens\\ordereditor\\ordersettings\\tabs\\StatusTab.js",["289","290","291","292","293"],"import styles from '../../../../../../Setup.module.css';\r\n\r\nvar status = \"\";\r\n\r\nexport default function StatusTab(props)\r\n{\r\n    console.log(props);\r\n    status = props.orderStatus;\r\n\r\n    function changedstatus (event){\r\n        event = event ||  window.event;\r\n        status = event.target.value;\r\n    }\r\n    function updateStatus (){\r\n        props.updateCurrentOrderStatus({status : status , deliverytime : props.orderDeliveryTime});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label>Update Order Status</label>\r\n            <select className={styles.formcontrol_select} onChange={() => changedstatus(this)} style={{marginTop : 10}} defaultValue={props.orderStatus}>\r\n                {props.orderType == 'walkin' &&\r\n                    <>\r\n                        <option value=\"new\">NEW</option>\r\n                        <option value=\"inkitchen\">In Kitchen</option>\r\n                        <option value=\"fulfilled\">Fulfilled</option>\r\n                        <option value=\"cancelled\">Cancelled</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                    </>\r\n                }\r\n                {props.orderType == 'eatin' &&\r\n                    <>\r\n                        <option value=\"new\">NEW</option>\r\n                        <option value=\"inkitchen\">In Kitchen</option>\r\n                        <option value=\"fulfilled\">Fulfilled</option>\r\n                        <option value=\"cancelled\">Cancelled</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                    </>\r\n                }\r\n                {props.orderType == 'collection' &&\r\n                    <>\r\n                        <option value=\"new\">NEW</option>\r\n                        <option value=\"awaitingcollection\">Awaiting Collection</option>\r\n                        <option value=\"inkitchen\">In Kitchen</option>\r\n                        <option value=\"collected\">Collected</option>\r\n                        <option value=\"cancelled\">Cancelled</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                        <option value=\"didnotcollect\">Did Not Collect</option>\r\n                    </>\r\n                }\r\n                {props.orderType == 'delivery' &&\r\n                    <>\r\n                        <option value=\"new\">NEW</option>\r\n                        <option value=\"inkitchen\">In Kitchen</option>\r\n                        <option value=\"outfordelivery\">out for delivery</option>\r\n                        <option value=\"delivered\">Delivered</option>\r\n                        <option value=\"cancelled\">Cancelled</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                        <option value=\"couldnotdeliver\">Could not Deliver</option>\r\n                    </>\r\n                }\r\n                {props.orderType == 'staff' &&\r\n                    <>\r\n                        <option value=\"new\">NEW</option>\r\n                        <option value=\"inkitchen\">In Kitchen</option>\r\n                        <option value=\"fulfilled\">Fulfilled</option>\r\n                        <option value=\"cancelled\">Cancelled</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                    </>\r\n                }\r\n            </select>\r\n            <button style={{marginTop : 10}} className=\"btn btn-success\" onClick={() => updateStatus()}>Update Status</button>\r\n        </div>\r\n    );\r\n}",{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","severity":1,"message":"299","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":14},{"ruleId":"298","severity":1,"message":"302","line":107,"column":11,"nodeType":"300","messageId":"301","endLine":107,"endColumn":18},{"ruleId":"298","severity":1,"message":"303","line":6,"column":9,"nodeType":"300","messageId":"301","endLine":6,"endColumn":12},{"ruleId":"298","severity":1,"message":"304","line":11,"column":9,"nodeType":"300","messageId":"301","endLine":11,"endColumn":27},{"ruleId":"298","severity":1,"message":"305","line":11,"column":29,"nodeType":"300","messageId":"301","endLine":11,"endColumn":44},{"ruleId":"298","severity":1,"message":"306","line":11,"column":46,"nodeType":"300","messageId":"301","endLine":11,"endColumn":62},{"ruleId":"307","severity":1,"message":"308","line":138,"column":38,"nodeType":"309","messageId":"310","endLine":138,"endColumn":40},{"ruleId":"298","severity":1,"message":"311","line":13,"column":8,"nodeType":"300","messageId":"301","endLine":13,"endColumn":12},{"ruleId":"298","severity":1,"message":"312","line":14,"column":8,"nodeType":"300","messageId":"301","endLine":14,"endColumn":20},{"ruleId":"298","severity":1,"message":"313","line":15,"column":8,"nodeType":"300","messageId":"301","endLine":15,"endColumn":25},{"ruleId":"298","severity":1,"message":"314","line":16,"column":8,"nodeType":"300","messageId":"301","endLine":16,"endColumn":24},{"ruleId":"298","severity":1,"message":"315","line":17,"column":8,"nodeType":"300","messageId":"301","endLine":17,"endColumn":27},{"ruleId":"298","severity":1,"message":"316","line":17,"column":5,"nodeType":"300","messageId":"301","endLine":17,"endColumn":24},{"ruleId":"298","severity":1,"message":"317","line":17,"column":26,"nodeType":"300","messageId":"301","endLine":17,"endColumn":39},{"ruleId":"298","severity":1,"message":"318","line":30,"column":13,"nodeType":"300","messageId":"301","endLine":30,"endColumn":21},{"ruleId":"298","severity":1,"message":"319","line":61,"column":5,"nodeType":"300","messageId":"301","endLine":61,"endColumn":14},{"ruleId":"298","severity":1,"message":"320","line":66,"column":9,"nodeType":"300","messageId":"301","endLine":66,"endColumn":15},{"ruleId":"298","severity":1,"message":"321","line":87,"column":12,"nodeType":"300","messageId":"301","endLine":87,"endColumn":23},{"ruleId":"298","severity":1,"message":"322","line":87,"column":25,"nodeType":"300","messageId":"301","endLine":87,"endColumn":34},{"ruleId":"307","severity":1,"message":"308","line":273,"column":30,"nodeType":"309","messageId":"310","endLine":273,"endColumn":32},{"ruleId":"298","severity":1,"message":"323","line":286,"column":14,"nodeType":"300","messageId":"301","endLine":286,"endColumn":44},{"ruleId":"307","severity":1,"message":"308","line":289,"column":25,"nodeType":"309","messageId":"310","endLine":289,"endColumn":27},{"ruleId":"298","severity":1,"message":"324","line":195,"column":39,"nodeType":"300","messageId":"301","endLine":195,"endColumn":62},{"ruleId":"298","severity":1,"message":"325","line":195,"column":71,"nodeType":"300","messageId":"301","endLine":195,"endColumn":92},{"ruleId":"298","severity":1,"message":"326","line":201,"column":38,"nodeType":"300","messageId":"301","endLine":201,"endColumn":60},{"ruleId":"298","severity":1,"message":"327","line":201,"column":69,"nodeType":"300","messageId":"301","endLine":201,"endColumn":89},{"ruleId":"298","severity":1,"message":"328","line":206,"column":39,"nodeType":"300","messageId":"301","endLine":206,"endColumn":68},{"ruleId":"298","severity":1,"message":"329","line":206,"column":77,"nodeType":"300","messageId":"301","endLine":206,"endColumn":104},{"ruleId":"298","severity":1,"message":"330","line":211,"column":38,"nodeType":"300","messageId":"301","endLine":211,"endColumn":66},{"ruleId":"298","severity":1,"message":"331","line":211,"column":75,"nodeType":"300","messageId":"301","endLine":211,"endColumn":101},{"ruleId":"332","severity":1,"message":"333","line":11,"column":53,"nodeType":"334","messageId":"335","endLine":11,"endColumn":55},{"ruleId":"332","severity":1,"message":"333","line":11,"column":53,"nodeType":"334","messageId":"335","endLine":11,"endColumn":55},{"ruleId":"332","severity":1,"message":"333","line":13,"column":53,"nodeType":"334","messageId":"335","endLine":13,"endColumn":55},{"ruleId":"332","severity":1,"message":"333","line":71,"column":53,"nodeType":"334","messageId":"335","endLine":71,"endColumn":55},{"ruleId":"307","severity":1,"message":"308","line":47,"column":29,"nodeType":"309","messageId":"310","endLine":47,"endColumn":31},{"ruleId":"336","severity":1,"message":"337","line":126,"column":32,"nodeType":"338","messageId":"339","endLine":126,"endColumn":47,"fix":"340"},{"ruleId":"336","severity":1,"message":"341","line":127,"column":36,"nodeType":"338","messageId":"339","endLine":127,"endColumn":46,"fix":"342"},{"ruleId":"336","severity":1,"message":"343","line":128,"column":37,"nodeType":"338","messageId":"339","endLine":128,"endColumn":48,"fix":"344"},{"ruleId":"336","severity":1,"message":"343","line":128,"column":58,"nodeType":"338","messageId":"339","endLine":128,"endColumn":69,"fix":"345"},{"ruleId":"336","severity":1,"message":"346","line":129,"column":19,"nodeType":"338","messageId":"339","endLine":129,"endColumn":28,"fix":"347"},{"ruleId":"307","severity":1,"message":"308","line":329,"column":52,"nodeType":"309","messageId":"310","endLine":329,"endColumn":54},{"ruleId":"307","severity":1,"message":"308","line":331,"column":28,"nodeType":"309","messageId":"310","endLine":331,"endColumn":30},{"ruleId":"298","severity":1,"message":"348","line":334,"column":14,"nodeType":"300","messageId":"301","endLine":334,"endColumn":34},{"ruleId":"307","severity":1,"message":"308","line":385,"column":57,"nodeType":"309","messageId":"310","endLine":385,"endColumn":59},{"ruleId":"307","severity":1,"message":"308","line":9,"column":57,"nodeType":"309","messageId":"310","endLine":9,"endColumn":59},{"ruleId":"307","severity":1,"message":"308","line":11,"column":58,"nodeType":"309","messageId":"310","endLine":11,"endColumn":60},{"ruleId":"298","severity":1,"message":"349","line":19,"column":34,"nodeType":"300","messageId":"301","endLine":19,"endColumn":41},{"ruleId":"298","severity":1,"message":"349","line":24,"column":34,"nodeType":"300","messageId":"301","endLine":24,"endColumn":41},{"ruleId":"298","severity":1,"message":"318","line":1,"column":13,"nodeType":"300","messageId":"301","endLine":1,"endColumn":21},{"ruleId":"332","severity":1,"message":"350","line":23,"column":51,"nodeType":"334","messageId":"335","endLine":23,"endColumn":53},{"ruleId":"307","severity":1,"message":"308","line":9,"column":39,"nodeType":"309","messageId":"310","endLine":9,"endColumn":41},{"ruleId":"298","severity":1,"message":"351","line":12,"column":24,"nodeType":"300","messageId":"301","endLine":12,"endColumn":41},{"ruleId":"298","severity":1,"message":"352","line":21,"column":12,"nodeType":"300","messageId":"301","endLine":21,"endColumn":27},{"ruleId":"298","severity":1,"message":"353","line":21,"column":28,"nodeType":"300","messageId":"301","endLine":21,"endColumn":46},{"ruleId":"307","severity":1,"message":"308","line":101,"column":54,"nodeType":"309","messageId":"310","endLine":101,"endColumn":56},{"ruleId":"307","severity":1,"message":"308","line":102,"column":31,"nodeType":"309","messageId":"310","endLine":102,"endColumn":33},{"ruleId":"307","severity":1,"message":"308","line":111,"column":41,"nodeType":"309","messageId":"310","endLine":111,"endColumn":43},{"ruleId":"354","severity":1,"message":"355","line":114,"column":13,"nodeType":"300","messageId":"356","endLine":114,"endColumn":17},{"ruleId":"307","severity":1,"message":"308","line":22,"column":34,"nodeType":"309","messageId":"310","endLine":22,"endColumn":36},{"ruleId":"307","severity":1,"message":"308","line":31,"column":34,"nodeType":"309","messageId":"310","endLine":31,"endColumn":36},{"ruleId":"307","severity":1,"message":"308","line":40,"column":34,"nodeType":"309","messageId":"310","endLine":40,"endColumn":36},{"ruleId":"307","severity":1,"message":"308","line":51,"column":34,"nodeType":"309","messageId":"310","endLine":51,"endColumn":36},{"ruleId":"307","severity":1,"message":"308","line":62,"column":34,"nodeType":"309","messageId":"310","endLine":62,"endColumn":36},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","'options' is assigned a value but never used.","'gql' is defined but never used.","'deleteDevicesCache' is defined but never used.","'setDevicesCache' is defined but never used.","'setSettingsCache' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Tabs' is defined but never used.","'NewOrdersTab' is defined but never used.","'CompleteOrdersTab' is defined but never used.","'InHouseOrdersTab' is defined but never used.","'ProcessingOrdersTab' is defined but never used.","'CATALOG_CACHE_QUERY' is defined but never used.","'DEVICES_QUERY' is defined but never used.","'_storage' is defined but never used.","'orderData' is defined but never used.","'siteID' is assigned a value but never used.","'siteloading' is assigned a value but never used.","'siteerror' is assigned a value but never used.","'updateCurrentOrderDeliveryTime' is defined but never used.","'customermutationLoading' is assigned a value but never used.","'CustomermutationError' is assigned a value but never used.","'addressmutationLoading' is assigned a value but never used.","'addressmutationError' is assigned a value but never used.","'updatecustomermutationLoading' is assigned a value but never used.","'updatecustomermutationError' is assigned a value but never used.","'updateaddressmutationLoading' is assigned a value but never used.","'updateaddressmutationError' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-whitespace-before-property","Unexpected whitespace before property fill.","MemberExpression","unexpectedWhitespace",{"range":"359","text":"360"},"Unexpected whitespace before property concat.",{"range":"361","text":"360"},"Unexpected whitespace before property floor.",{"range":"362","text":"360"},{"range":"363","text":"360"},"Unexpected whitespace before property pow.",{"range":"364","text":"360"},"'updatedeliverystatus' is defined but never used.","'refetch' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'updateTypedPrefix' is assigned a value but never used.","'discountedTotal' is assigned a value but never used.","'setDiscountedTotal' is assigned a value but never used.","no-redeclare","'data' is already defined.","redeclared","no-global-assign","no-unsafe-negation",[4638,4640],".",[4689,4691],[4746,4748],[4767,4769],[4809,4811]]